{"version":3,"sources":["gpu/gpu.ts","gpu/module.ts","helper/file.ts","gpu/lines.ts","gpu/math.ts","gpu/position.ts","gpu/camera.ts","loader/cube.ts","gpu/cloud.ts","gpu/kNearest.ts","gpu/triangulate.ts","gpu/filter.ts","gpu/edge.ts","gpu/edgeOld.ts","loader/color.ts","loader/grid.ts","loader/sphere.ts","loader/decompress.ts","loader/pcd.ts","main.ts"],"names":[],"mappings":";;AmBAA;;AACA;;AACA;AbFA,AEAA,AIAA,ACAA,AFAA,ARAA,ACAM,AHAN,AIAA,ASAA,APAA,AUAA,AFAA,AGCA,AFDA,MZAa,MAAP,CAAa;AKAnB,ALCS,AFDF,AeCD,AEEN,EfFS,IAAI,GaAG,GAAV,CAAc,EfDE,IeChB,EAAkC,KfDjC,CAA2B,GeC5B,EAAmD,EfDlD,EAA4C;AICnD,AEAA,AIAA,ACAA,AFAA,ARAA,AECM,AKFN,ARCC,AeCA,ACAD,MbAa,EYAN,CfDC,IAAI,CGCN,CAAe,CYAN,GAAG,CfDV,CAAY,CAAC,GeCG,CAAC,GfDL,EAAU,CeC7B,KfDmB,KAAoB;AOAxC,ALEC,ACAA,AHDC,AeCD,AECD,EfDC,ACAA,KAAK,CYAC,EfDC,GECP,CAAoB,CFDR,AeCC,GbAb,AFDe,AeCC,EbAsB,EaAlB,IfDG,CAAC,KeCR,CAAe,OfDhB,CAAuB,CeCtB,CAAhB,KfDe,CAAd;AMAF,AIAA,ACAA,AFAA,ARAA,ACEE,AMHF,AREE,AeCD,IfDC,EeCG,GbAE,AFDA,CAAC,CeCE,EbAR,CFDA,AeCW,CAAZ,CbAa,CFDC,GECb,GFDA;AODF,ALGE,ACAD,AHDC,AeCD,AEAD,EdAC,EHDC,EeCG,GfDE,CAAC,EeCG,CZAV,EYAa,CZAb,AHDC,AeCD,GfDgB,EAAf;ADFI,AIIJ,AKJF,AIAM,APAA,AQAA,ACAA,SfAU,AIIT,ASJS,APAA,AQAA,ACAA,GfAV,CAAc,CIIlB,EJJI,CIIS,CJJgB,CMAzB,AQAA,CRAqB,AQAA,CDArB,AEAA,CFAuB,AEAA,ITAvB,AQAA,EDAA,APAqC,AQAF,ACAnC,EXIgB,ASJqB,AEAA,GTAK,GAAG,EFIpC,EAAb,CEJI,EAAkD;APAjD,AIKS,AHJf,AIIC,AHFA,AYFD,APAA,AUGA,AFCA,ACJA,AGGD,InBJW,CiBIP,GhBHG,AaAA,APAA,AQIA,ACJA,CZIC,AFFD,EFHA,EEGI,CDFE,ACED,AYFC,EPAE,ASAA,CZIC,AHJA,ACED,AYFC,ACIA,CbFd,CKFgB,ASAA,CZIF,AHJG,ACED,AaEC,CdJC,ACED,AYFC,EPAE,ASAA,CdEA,AaEC,GdJP,CAAW,GCEE,CAAC,CYFd,CAAiB,CPAf,ASAA,CTAiB,AQIhB,ACJgB,CDIC,CbFlC,AaEmC,EbFC,AYFC,CZEA,CKFE,ASAA,CdEvC,AYFwC,CAA1B,ACI2B,CbFA,AYF1C,APA2C,ASAA,CfA5B,AMAE,ASAA,CfA4B,AMA7C,AQI6C,ACJ7C,CDIoC,GAAa,CAAd,IAAmB,CAApC,CAAlB;ATJK,AFKJ,AHJA,ACEC,AeCD,AFCD,AGRD,IjBIE,EKDW,AJGV,EDFG,AgBGA,AFCC,EdJC,CGIC,AFFD,CIHF,AJGG,AeCC,CXJS,CSKN,CXAA,AaDA,EFCG,CbFb,GEEM,AaDU,AFCC,CXCjB,AFHgB,AeCC,IbEb,CaFkB,CfDA,CeCN,CAAjB,GFCc,CAAiB,CbFD,AaEE,CbFD,CAAD,CEG7B,AFHA,CEGiB,EWDoB,GAAG,CAAT,GAAa,CAAd,IAAmB,CAApC,CAAf;ATJQ,ANDF,AIOH,AHP0C,AIK7C,ASHA,APAA,ASAA,AGED,EbHS,ADIR,CJLe,CDAL,ACAV,EIKI,CAAC,ASHA,APAA,ASAA,GhBFC,CcEG,APAA,ASAA,CVDS,AQCR,APAA,ASAA,GXGN,ASHS,APAA,ASAA,CFAb,APAA,ASAA,CXG6B,CSHb,APAA,ASAA,CFAC,APAA,ASAA,GFAG,APAA,ASAA,CXGhB,EAAuC,GSH3C,APAA,ASAA,EFA4B,APAA,ASAA,CFAC,APAA,ASAA,EFA7B,APAA,ASAA,EFAiC,APAA,ASAA;AVAzB,AEAT,AIDA,ACAA,AFAA,ARCA,ACMI,AHLH,AIGC,AHFC,AYDD,APAA,AUEA,AFED,AGND,AFEE,EVDO,EEAL,AIDA,ACAA,AFAA,ARCA,AWCF,CVGkB,CEJP,CFMN,CAFa,AaDd,AFEC,CdJC,AIGD,CDEG,AFJH,AYDC,AEAA,CZGY,AFFZ,AYDC,CXDG,AWCF,APAA,AUEA,CbGG,CINC,AJIM,ACAlB,AHFS,AcDC,CbDkC,AFC7C,AIGY,ASHA,AGEA,AFEC,CXEV,AUNK,APAK,CCDG,AJIG,AGHL,ASAA,CDIE,CHNE,ACAA,AFAA,APQZ,ACHL,ASHe,ACKf,CXFkB,ACAF,ASHV,AGEU,CfDA,AYDhB,AGEA,ADFiB,CJFmC,ACAA,AFAA,APQ5C,AFLS,AKDT,AQIO,ACJG,CZGA,AGHC,AUEA,CdHrB,AWCsB,ACMpB,CXAW,CIPb,AJIoB,AYHL,CTAU,ASAA,CZOrB,ACJF,AHFS,AKDe,CHGN,AWCH,CVDW,ASHA,CFF5B,ACAA,AFAA,APSO,AFNqB,AaM1B,ACP2B,CZGT,AFFjB,AcD2B,EZOpB,AFNqB,AKDV,AQIJ,CXDG,CCAlB,ASHgC,ACQhC,CXDW,CAJO,AYHK,CTAY,CHQjC,AURkC,APA5B,CHGU,AUHmB,APArC,AQIe,EXIV,AWCL,ACTuC,CZGrB,AYHK,EZQf,CALU,AUHc,AEAW,CAA9B,CZQF,AURX,AEAA,CADgC,CDUhC,ACT8C,GDSlB,SALb,KAMZ;ATVI,AECT,ARFO,ASAP,ALUI,AHRH,AIGC,AHFE,AYDF,APAA,AUEC,AFQD,AITF,EbFS,EECL,ACFA,AKEF,CRDU,CNDC,AiBIV,EfDC,AaSE,EDVE,AGED,CHFE,APAF,CCAK,AMAF,APAR,CLCO,CAAC,CMDoC,AMAjC,CdFU,AcEd,ACUK,GfZY,ASAP,AKEF,CZCb,AYDI,ACUU,CDVhB,CLFoD,EDEtD,ANCoB,AYDE,GZClB,EaSF,CDV0B,CLF5B,AMY6B,KDVK,IAAI,CAAC,MAAL,EAAhC;AFDK,ACAA,AFAA,AXDqB,ASC5B,ANCO,ACEa,AMJpB,ARII,AYDF,APAC,AUEA,AFQA,ACXD,EhBF0B,CAAC,CSCzB,ACDA,AIGF,CdH6B,AII5B,CADM,AWUN,CXVD,CJHwB,AOGvB,EOAK,AGED,ADHC,CFCC,CAAC,CEDC,CDWA,CHZW,ACAA,AFAA,ARCA,AWCT,CAAJ,APAE,AUEE,ADHC,CTCF,AQUE,CNZI,AFEL,CGHM,AIGF,AGED,CHFR,AEDU,CPDkC,ANC7C,AWCL,APAc,ASDG,CJDZ,ACAA,AFAA,AREN,AOHqD,AHG1C,AQUT,CHXF,ACAA,AFD6B,AMIvB,CHFe,CPAF,CAAT,AUEY,CVFpB,ASDW,CJDP,ACAA,EDEN,ACAA,AFFM,AFAP,ANCO,AWCqB,APAH,CGHzB,CCCkD,ARGjD,AaF6B,CLDvB,AKCO,CTCe,CIFgC,AJE/B,AUE3B,CHF+B,AEDA,CJD3B,ACAA,AII2B,CdH3B,CSEN,ACAA,CVCA,AWFqC,AEDA,CLD/B,AGEgC,APAd,ASDc,ELDoC,AMInC,ADHtC,EJDK,ACAA,CNEkC,CKExC,ACAA,ACFiC,APAT,AUEmB,CLJrC,ACAA,CVCA,AWCL,CFGD,ACAA,ANH4C,CJG5C,AIHE,CUEqC,CAAU,GLJ3C,ACAA,CVCA,CSIQ,ACAA,CVAG,6BcDsB,CAAN;AXFjC,AECM,AIIN,ACAA,AFNA,AXFmC,AGQnC,ACKC,ACND,AKND,ARIG,AYDD,APAC,AUEA,AFQA,ACVD,AGAF,EbDC,ANHmC,AKOnC,CLPoC,CUCjC,AMGF,ChBJqC,CYQlC,ACAA,AFNA,ARMA,EHRqB,AOIvB,EUEI,CZCG,CAAC,AWHD,CVDT,ADIS,AWHC,CVDE,AHKA,AaJD,CRAU,AHGA,AYDV,CZCF,AEHC,CAAC,ASAG,CbIE,AEDgB,AKNf,AHGL,AUEE,ADFJ,CXGD,EGHH,AIIa,ACAA,AFNA,ANKsB,AKNU,AHGpC,ASAG,CRClB,ADDW,AUEL,ADFG,CAAR,EVDD,AMKuB,ACAA,AFNA,AJEJ,AUEE,CVFX,ASAa,CVDQ,AHK/B,AIJE,EJIyB,CKJrB,AEHP,AHGyB,ASAG,CAAC,CRE5B,CSAE,CLEF,ACAA,AFNA,AJE4B,ASAL,CTAM,AUEE,ADFC,CJIE,ACAA,AFNA,EHE5B,AQAiB,ERGvB,CDHwB,AUEa,CDFE,GCEE,CTFnC,ADAkC,ASAG,CTAnB,ASAoB,CRI5C,EDJ4C,AUEP,ADFE,CTArC,AUE6C,ADFC,IAAT,CAAtC,CRAK,EAKN,MALM,EAKW,SSHoB,CAAN;AXF9B,AEOD,AIFC,ACAA,AFNA,AXH0C,ASGrC,ANML,AEDA,AKLK,AHEJ,ASAD,EhBL0C,CAAC,CYS3C,ACAA,AFNA,AKEA,ChBL6C,CQW1C,AERQ,CAAC,CVHY,AOKvB,CDDI,ADIA,CFCC,AONS,EAAV,AMEG,CbIC,AaJA,CRME,AHHX,AWHU,CPFU,CNMR,AIJH,CFGI,AEHH,ASAG,CRME,ADNJ,ASAF,CVDT,AMKe,ACAA,AFNA,EJED,ASAG,CVDC,AMKA,ACAA,AFNA,AFAb,ANMa,AIJR,ASAF,CPFoB,AOE5B,CPFK,CGMgB,ACAA,AFNA,AJEH,CKII,ACAA,AFNA,AFAiB,AFE9B,ASAa,CRMnB,ADNF,GFGmB,AEHG,ASAG,CRME,ADNJ,ASAG,CJIT,ACAA,AFNA,AJEjB,CKI4B,ACAA,AFNA,CKEP,CVDG,AGDpB,AOE0B,EPF8B,EJKhD,AWHS,CXGQ,AWH9B,CRMsC,AHHzB,EILR,AJK4B,CAApB,CGG6B,ACRiC,CHCzD,ADIkB,CCJC,AHKL,AEDnB,EAA0B,KGGxC,AIFmB,ACAA,AFNA,CCMiC,ACAA,AFNA,CHQE,CHHxC,CCJK,ADI8B,ECJE,GAAG,ADIA,CCJC,EHKpC,CAAlB,CEDa,CAAb,CCJkD,CAAW,MAA3C,EAAmD,GAAnD,EAAwD,IAAxD,CAAlB;AACA,AEOA,AIFC,ACAA,AFNA,AXJiD,ASInD,ANMC,ACKD,ACNC,AHHA,AYAD,APAE,AUCA,AFQD,ACTA,AGDF,EnBLoD,AIenD,CJfoD,CEMnD,AaSA,ACTA,ChBNqD,CYUpD,ACAA,AFNA,AFAE,ALWA,CAAC,AWAD,ETVE,AJCA,AYAC,AGCF,CTKE,ALFA,ADJA,CaSC,CDTE,ACST,ACTQ,CVDR,AEOS,AIFD,ACAA,AFNA,AGEE,AEAD,CAAC,CJIA,ACAA,AFNA,APWP,CEVS,AEOA,ALFA,CCKgB,AYTf,CdAb,AcAS,CbIM,EMNG,APED,AcAA,CRMC,AQNV,CZSL,AYTH,EPFsB,ANMD,ACKqB,AUTpC,CXIgB,AWJC,AEAD,GVDH,AHKJ,CAAW,AaJA,CAAC,CFArB,CXIS,ADJa,COF7B,ANMC,AWJ+B,AEAT,CAAS,CPFE,CHCrB,CUCU,CVDtB,GUCsC,IAAI,CRMV,AQNW,CFAE,CAAC,CEAR,CAAS,IFAhB,AEAO,CAAtC,EFAuD,QNMrC,CAAlB,KMNqE,CAAC,OAAhE,CAAP;ARAC,AEOA,AIFE,ACAA,AFNA,AXLsB,ASKxB,ANOA,ACIA,AFTC,AYAF,AGCG,AFQF,ACTA,ChBPK,GSKL,ANOA,AYIA,IHLE,ACAA,AFNA,AMGA,CXFG,AFUA,CIHC,EFPN,AHMQ,ADLD,CESE,AWAA,CHLD,ACAA,AFNA,APWE,AWAA,CTVC,AHMA,AcJF,CTKG,AIFF,ACAA,AFNA,AMGA,CbQG,AFTD,AaSC,CZJC,ACId,CIHe,ACRA,ANOA,CCIC,AFTD,AaSC,CXAC,AWAR,CHLO,ACAA,AFNA,AFAE,AQGF,AFQhB,CHLiB,ACAA,AFNA,CPWG,AaRX,CTKY,ACRA,ANOV,ACIX,AFToB,AeClB,AFQmB,CTVrB,AEOsB,AIFZ,ACAA,AFNA,AFAY,ANOA,ADLD,CUIA,ACAA,AFNA,APWE,CAAC,AaRF,CTKP,CAAW,AJG1B,AWA0B,CbTzB,AaS0B,CNXT,ALWU,AWA5B,CPHe,AIFY,ACAA,AFNA,AFAE,CDQ7B,ASL4B,CAAC,KAAK,EAAN,CAA1B,GdIS,CAAgC,OMPzB,CAAiC,GGMV,ACAA,AFNA,mBCMd,CAAjB,CADA,ADLiB,CEMA,AFNjB,CEMA,AFPA,CEMA;APHV,AEOA,AIFE,ACAA,AFNA,AFAD,ANOA,ACIA,ACNF,AKNM,AHEL,AUEE,AFQF,AIXF,EdKC,EGGC,AOGA,ENXC,ANOA,CcNA,CLKC,ACAA,AFNA,CNKI,CAAC,CDMD,AGVD,CCOG,ALDD,AINP,CEDQ,AJKF,AUMG,CZJA,AYIC,CPHC,ACRD,ALWA,ACNQ,AKNE,AOIV,CbQC,CaRC,AFQC,CPHC,AIFF,ACAA,AFNA,CHQG,AJGD,CQLA,ACAA,AFNA,APWb,AWAe,CEVf,AFUQ,CXAQ,AMZZ,AKYL,CXAkB,AMZU,EFSjB,AOGU,CPHC,AJGD,CAApB,EAAuB,CAAC,AWAC,CAAC,CXA1B,AMZI,AKYL,EXA6B,AMZqB,MAA7C,EAA2D,IFSrD,CAAgC;AAC1C,AILS,ACAA,AFNA,AXHL,ASMH,ANOA,ACIA,ACNF,AKND,AREE,AKAA,AUEA,AFQD,ACTD,IhBRU,AeiBT,CEfA,CTYC,AETE,EDCD,ANOA,ACIA,AGVD,CFII,AWHC,ChBRD,AEOA,CeEE,CTKA,AQNE,CDSA,ACTC,CRMD,ACRD,ANOA,AEFR,AUMU,CbVA,CODA,ANOA,ACIA,AGVD,CHUE,ACNE,AEJH,AQUG,CRVF,CLAG,CaUE,CLZE,AHEJ,AQUL,CNXO,ANMP,AILC,AQUV,CNXiB,ALWA,AFVZ,EQFiB,AHEJ,AQUG,ACTf,CPFI,ALWU,AGVX,ASCc,CPFF,ALWA,AFVC,AKArB,GHUuB,ACNJ,AEJG,AQUG,CXAf,AWAgB,CbVA,AaU3B,CNX2B,APCC,CEUA,AMZ7B,AHE4B,ASCrB,CZSI,AGVkB,CHU1B,AMZ+B,AMGA,CXGpB,CAAe,CDMK,AFVX,EGIT,AEJU,EFIU,AHJK,CEUA,AFVrC,EAAwC,AKAF,CAAhB,CHUU,CAAU,CAAC,AGVD,ASCI,CXGlC,AEJZ,ASC+C,CXGN,CDMK,CAAC,GAAG,ACNJ,AWHd,CPFQ,ALWR,CAA/B,CYTuD,EXG5C,CAAb,WWHuE,CAAC,MPF7C,CAAjB,AOEJ,CPHI,AOGX;AVAe,AEOZ,AIPiD,ACAA,AFNA,AFKjD,ANOA,ACIA,ACNF,AKNA,AREE,AKAD,AUEA,AFQD,ACTD,AGHD,ITAE,AKYA,CHVkB,ACAA,AFNA,CLMf,AMAH,ACAA,AFNA,EHaE,ACRA,ANOA,AIND,EUEI,AFQC,CAAC,EERC,CTKA,AOGE,EPHA,ADPD,AUEE,CXFG,ACAJ,AQUG,CTVE,AGDH,ANOA,AIND,AQUL,CLZS,AKYf,CNXc,ANOA,AcJC,CXFD,ACAA,CCML,AERS,AHER,AQUQ,CTVQ,CWEP,CPJE,AHEH,AUEjB,CPJqB,AHEb,CAAR,AQUsB,CAAC,CAAxB,CRVuB,EJId,AONS,CAAW,CHEF,CAAC,MAAL,KAAgB,CAAhB,GAAoB,CAA1C,GGFiB,CAAiC;AJGnD,AEOE,AIFF,ACAA,AFNA,AXPK,ASIK,ANUR,ACID,AMZA,AREC,AKAD,AUEA,AFQD,IflBS,AekBT,ELZC,EFSC,ALDA,AIND,CDAI,CWEA,AFQC,CflBD,AekBE,CTVP,CIFQ,AOIA,CFQE,CTVC,AHMF,AORC,CHED,AUEE,CdIA,AIND,AQUG,CTVb,AEOY,ALAT,AIPQ,AQUL,CAAN,CPHc,CDPA,CAAJ,AUEO,AFQC,GRVA,CAAT,AUEY,CVFpB,AUEqB,AFQC,CAAC,CAAxB,CRVuB,CAAtB,AUEyB,CTGjB,ESHoB,IAAR,KAAiB,CAArB,CAAN,GAAgC,CAA1C;AXDD,AEOE,ACbiD,ANa/C,ACGJ,ACPD,AKLG,AHED,AUEA,AFQD,AIbF,EdMC,EUOC,CNhBkB,CAAlB,EDaE,AETA,CJEG,CHOD,AcLC,AFQC,CAAC,GVPI,AKLH,AKYE,CPHD,AHJG,AYDF,CPJA,CFSC,AOGE,CPFV,AHLQ,AUOL,CTVN,AWEc,AFQd,CZHc,AEJS,ECHL,AHOF,AOTA,AKYE,CZFb,AOVY,GAAP,CAAW,AOIpB,AFQsB,CAAC,CERA,AFQxB,ILZ2B,EJEF,AWEK,IAAI,KAAJ,CAAU,CXFtB,CAAmB,GAAnB,EAAwB,GAAG,CAAC,EIFL,IJEC,CAAW,MAAnC,CWEY,CXF+B,AWErC,GXFN,EAAgD,GAAhD,CAAlB,IIF2B,CAAjB,CADA;AJIV,AEQI,AIJL,ACAA,AFNA,AXNM,ASOL,ANSM,AELN,AKLE,ARCD,AaYD,IfnBS,AemBT,IHPK,ACAA,AFNA,ADAH,EFUE,ARhBC,AKWC,CAAC,CFKD,ADTC,CUKG,ACAA,AFNA,AIaD,CVRC,AUQA,EHPG,ACAA,AFNA,ATCF,CaYE,CLbD,CLKG,AHJD,CMSA,AIJG,ACAA,AFNA,ADAH,AKaE,CAAP,CPHO,AOGhB,CPFK,CHNK,AHJS,CGIE,AHJD,AaYC,CZHD,ADTD,CAAlB,CCSqB,AYGE,CZJnB,AYIoB,CAAzB,CHPa,ACAA,AFNA,CCMgB,ACAA,AFNA,CCMC,ACAA,AFNA,ANKpB,EAAV,IOC6B,ACAA,AFNA,ECMS,ACAA,AFNA,CCMT,ACAA,AFNA,CCMhB,ACAA,AFNA,CCMd,ACAA,AFNA;AHYO,AILP,ACAA,AFNA,ARUO,ACES,ACPf,AKRU,ARIT,AKAD,AUEC,AFUD,AIfF,IJeE,IHPK,ACAA,AFNA,CPYC,ACPD,CYFA,CVFA,CCUC,ALDA,ADTC,AKAP,CUEQ,AFUC,CHPE,ACAA,AFNA,ANKX,AUQU,CbZA,EUKI,ACAA,AFNA,ANKD,AUQA,CZHD,ACEG,AFXF,AeEA,CbSG,AaTf,CLGgB,ACAA,AFNA,ARUH,ACEC,AWCC,CHPE,ACAA,AFNA,AMGF,AFUP,CXDkB,AFXV,AaYjB,CXDe,AFXG,CCSA,CAFb,ACIiC,AWCjB,CPFD,AJCL,CFXF,CMUS,AJCyB,AFXxB,AaYC,CPHnB,AOGoB,CVRL,AUQpB,GHPc,ACAA,AFNA,ATCD,CUKkB,ACAA,AFNA,ATCF,GAAhB,CAAZ,CUKa,ACAA,AFNA,ANKD,CAAiB,COCQ,ACAA,AFNA,ANKP,CAAC,CAAnB,EAAsB,CAAC,CAAC,CAAxB,EAA2B,CAAC,CAAC,CAA7B,EOCuC,ACAA,AFNA,ANMlD,COAmD,ACAA,AFNA,OCMvC,ACAA,AFNA,ANKD,COCd,ACAA,AFNA,ANMY,aAAO,OAAP,CAAe,GAAf,CADE,EAEX,QAFW,CAEF,aAAO,SAAP,CAAiB,CAAC,CAAC,CAAC,CAApB,EAAuB,CAAC,CAAC,CAAC,CAA1B,EAA6B,CAAC,CAAC,CAAC,CAAhC,CAFE,EAGX,QAHW,CAGF,KAAK,KAHH,CAAb;ACFc,AESR,AILP,ACAA,AFNA,AXPM,ASON,ANUO,ACEN,ACJA,AKbmD,ARMlD,AKAA,AUEC,AFUF,IfpBS,AeoBT,CLlBkB,CJOf,AIPH,EEWK,ACAA,AFNA,AFAA,AFCJ,AUEC,GjBVG,AImBE,AaTF,CTQC,ALDA,ADTC,CUKG,ACAA,AFNA,AIaD,CAAC,CNbE,ALYD,AaTF,CLGI,ACAA,AFNA,AJCJ,CDCK,ACDJ,AQYG,CPFD,ACXG,ANUH,ADTC,AKAF,CKKK,ACAA,AFNA,CLEF,AESA,AILG,ACAA,AFNA,ARUH,AYGE,CNbE,ALYX,AFXS,AKAF,AUEC,AFUN,CNbU,ALalB,AGZS,AUEM,AFUhB,EPFkB,ANVC,CMQd,ANRe,AKAF,AQYG,CHPR,ACAA,AFNA,APaR,AGZI,CKKe,ACAA,AFNA,AJCvB,AUEoB,CfFE,AaYC,CbZA,AeET,AFUU,CRZF,AUErB,AFUF,IRZ2B,CLAP,AKAQ,GHY3B,AFZgC,CODlB,ALaG,AFZC,COAnB,APAC,CKAsB,CKKV,ACAA,AFNA,CCM2B,ACAA,AFNA,GFClC,AFAiC,CAAhB,EEAd,CAAT,AFA2C,CAA1C,EEAY,CADE,EAEf,cAAc,CAAC,OAAf,GAAyB,cAAc,CAAC,QAFzB,CAAhB;AHGC,AESM,AILN,ACAA,AFNA,AFGD,ANGM,ACOH,AMbF,AHCC,AUEC,AFUF,IHPA,ACAA,AFNA,AIaA,INVK,AFFJ,EKKK,ACAA,AFNA,AIaA,CTXC,AHGS,AYQT,CPFD,AILE,ACAA,AFNA,ARIL,AcDG,CRAI,CMUA,ETXE,AGCC,AFFJ,CAAC,AUEC,AFUE,CPFD,ADVD,AQYL,CTXN,ASWA,CPFc,ACRG,CFFH,AUEC,CVFL,AQYQ,GRZA,CAAT,CKKc,ACAA,AFNA,AJCtB,CKKuB,ACAA,AFNA,CMGtB,CVFqB,AQYG,CNVb,AFFW,AUEC,AFUE,CNVE,AFF5B,AQYD,CNV8B,IQAC,ERAF,EAAS,AQAH,CRAN,CAAhB,CAAd,EGGS,ACAA,AFNA,AMGuB,CLGY,ACAA,AFNA,AMGF,CLGjC,ACAA,AFNA,CCKgC,ACAA,AFNA,uBMIT,CAAN;AXAzB,AEKK,AIDL,ACAA,AFNA,AXPK,ASUN,ANQK,ACEF,ACLH,AHRE,AKCA,AUEC,AFUF,AGXF,EbMC,EOFC,ACAA,AFNA,AXPS,AeoBT,CXFkB,CcTd,CdWC,CKVA,ALQa,AGVjB,CFOK,CLfD,AGkBD,ACEI,ACLD,AHRF,AaaC,CPPU,AIAT,ACAA,AFNA,APWW,AWEX,CPRJ,CICM,ACAA,AFNA,APaE,ACLL,CODL,ACAA,AFNA,AFEU,ALQO,AWER,CVLQ,CDMhB,AGbO,CEEK,ALQI,AFXN,AKCF,AQYG,CbbA,AKCF,AQYL,AGXU,CdYX,AWDL,CNViB,ALQC,CKRA,ANQH,AIVD,AWCK,CdYX,AGbE,AQYQ,CZFD,ACAC,EAGP,AGbO,AWCpB,CdSoB,AFXb,AKCI,CJUY,ADXC,AKCrB,CJEE,ACYD,CAJgB,CGVK,AQYG,CXErB,AWFsB,CXFT,AWElB,CNVc,APHT,COG0B,ALYvB,AFfP,AKC0B,CHUT,AGVU,CLDG,CEepB,CAJO,CKRJ,CLaZ,CKboC,ALQpB,AGVK,EHelB,CALa,EAKV,AGf+B,CHUrB,AGVK,EHeZ,CGfgC,CAA1C,IEEmD,CAAC,OAAvC,CAAf;ADUK,AILF,ACAA,AFNA,AFEH,ANQK,ACKF,ACRF,AKTD,ARCG,AKCD,AQYD,IAAA,EHNE,ACAA,AFNA,EFEG,ACJA,ARCH,CGQG,CGID,ALDA,AYEE,CAAC,EHNE,ACAA,AFNA,AFEC,CJKV,AUKU,CHNC,ACAA,AFNA,ADFC,ARCH,CUMR,ACAA,AFNA,AFGY,APHH,CGQG,AUKA,CZFD,AOZG,AKcT,CNVU,AMUhB,CNViB,ANQH,ADXL,CMYM,AEbG,ARChB,CQDiB,AKcD,CPDD,GCTJ,CDSQ,ACTG,CDCrB,EHIiB,AUKM,CAAC,CAA3B,KVLa,CAAe,CKTb,CACf,CLQa,CILA,CAA2B,AJKP,GKR3B,GAAG,CAAT,CLQa,CAA6B,CKR7B,CADE,EAEf,CLO+C,KAAlC,CAAb,OKPc,CAAC,OAAf,GAAyB,cAAc,CAAC,QAFzB,CAAhB;AJIA,AEUK,AILF,ACAA,AFNA,AXNG,ASQL,ANFG,ACQe,ACDlB,AKND,ARFG,AeED,AFWD,AGXI,EZAL,CSbA,CfMU,ASQT,CLMC,CQFC,ACAA,AFNA,APOK,AaNN,CbMD,AFVC,CIII,AIAA,CVPA,AGKM,AcEP,ACAU,CVUV,ACTE,CHDD,AHUF,CMTK,CPHA,AeEA,CLKE,ACAA,AFNA,CDCE,CEKA,ACAA,AFNA,EHWA,AEVG,AQAX,CDAU,ACAU,CVUV,ASVC,CPAG,CAAC,CQAf,EDAgB,ACAyB,ETCtB,AQDT,CRCU,ACDT,AOAd,CPAyB,iBDClB,CAAmC,CAAnC,CADgC,ACAzB,EAAhB;AJCC,AEAG,AIIW,ACAA,AFNA,AFGd,ANSI,ACKJ,AMfD,ARFG,AKAF,AUEC,ACAF,ACRD,IVSE,IGGc,ACAA,AFNA,ADET,ARFH,AgBEG,ACRC,CXOK,AWPJ,CbQD,AHUF,AcVC,CTWF,ACVI,AFHF,CAAL,CEGS,ACDC,ASRZ,CPYsB,ACAA,AFNA,AFInB,APJO,AgBEG,ACRC,CbQD,AJFF,CUMa,ACAA,AFNA,ADET,AOAF,CCAG,CZAA,CWAA,CdUA,AOVG,ASRnB,EbQoB,AHUF,AcVX,CdWA,AgBnBgB,EFQD,CAAf,EfFiB,AgBEG,CDAD,ACAE,ERAb,CAAgB,CAAC,AQAL,CZAX,AJFL,AgBEV,CZAgC,AaRC,EjBMD,CeE9B,CPA4B,CJAO,AIAvB,AOAsB,CXArB,AIAf,CJAC,IWAyC,IAAI,IfFrC,CAAN,AeEuC,CAAU,mCAAV,CAAN;AXCnC,AEWI,AIRQ,ACAA,AFNA,AFKV,ANSI,AENP,AKLA,ARFG,AKAD,AUEA,AFUF,AIlBA,EdaA,IIHG,CMQE,CLVC,AHFJ,AYNI,CbQA,CEWD,ASXC,CFUG,CZCF,AYDG,CNRA,AQFD,CZKG,AKLA,CDEA,AJGC,AUKA,AIlBA,CVSX,AFHQ,AUEE,AFUE,CLVC,AHFJ,AUET,CZKU,AEPA,AYNI,CbQf,AWAc,CXAE,AEWF,AHNS,AKLN,CAAC,AHFJ,CCaE,ADbN,AQYX,CPEM,CFZL,ASUqB,CTVA,ACFH,AUEE,AFUE,CZCF,AIbX,AYNc,CZMtB,AYNuB,ChBmBF,CADjB,AcVmB,AFUE,CTV1B,ACFuB,EDEK,CAA5B,AIAc,CAAiB,AHFJ,AUEP,CVFQ,AUEE,AFU/B,EAAmC,CAAC,CLVrB,CKUf,CLVuC,AHFf,AYNR,CJkBwB,AIlBA,IZMA,CAAhB,GAAoB,CAA1C,AYNc,CAAhB,GTQqD,CAAC,IOAjC,CAAN,EPAA,CAAf;AJCC,AEYM,AIZL,ACAA,AFNA,AXFI,ASUH,ANSI,ACIO,ACVb,AKJD,ARHE,AKAA,AUEA,AFUD,AGXD,ACPA,KPOU,ACAA,AFNA,ATRT,COiBE,ASHC,CNKF,ACAA,AFNA,CDGI,AHHJ,AQYG,AIlBC,CbQA,AFeC,AWLD,CVLC,AYLD,CZKE,CGOD,ALDA,AeZG,CZCT,AICU,AODF,AFUC,CTVC,AGEA,AJGA,AUKV,AIlBW,CnBAS,CSUR,ALaC,AMdA,AHHJ,AQYG,AGXC,CdgBC,AGjBJ,AUEE,AERE,CbQd,AHWY,AIbD,CDEI,ADKA,AKJC,CVTX,AGmBS,ACID,AMdI,AQFlB,ClBP2B,AOMZ,CHiBW,AGjBf,AWCS,CDClB,AERmB,CbQpB,AHWkB,AENR,CFIL,AEJgB,AEPH,AUEE,CXAE,AEYF,ARpBf,AUSQ,AHHJ,AYNc,CTSC,AHHvB,AYNuB,CbQxB,AEYsB,ARpBmB,CQmBpC,CDbkB,CAAtB,AUEyB,CERN,CdaV,AcboB,CnBAzB,CKaL,AYL8B,CjBRyB,IiBQ7B,AERW,CFQD,AERE,CTSzB,CAA2B,SSTpB,EAA+B,OAAO,CAAC,IFQjC,CAAN,OERA,CAArB;AbSC,AEYM,AIRJ,ACAA,AFNA,AXNH,ASSe,ANUR,ACIN,ACVA,AKJA,AHHC,AQYA,AGXD,IREA,EEGE,ACAA,AFNA,AXNC,ESSW,AFHb,CFOI,CKJC,CJDC,AFeA,AchBA,CVaD,ARpBG,AGmBH,AOVE,CEGC,ACAA,AFNA,AXNC,CMQA,AGCU,AJIpB,CCLW,AMIA,ACAA,AFNA,APiBA,CQZV,ACAA,AFNA,AFIqB,AFHb,CFOI,AEPH,CCcE,ALDA,AIbD,ECcG,ALDA,AeZd,CdgBO,AGjBO,CPNX,AIwBF,AGlBS,CPNU,CQoBF,CAFb,ADZa,CPNf,AIwBE,AGlBI,CDEF,AICgB,AHHtB,CDEuB,AICA,EVTG,AKaP,AEPG,GDEhB,CCFoB,CDEI,ACFH,GHkB3B,CJxBF,AIwBmB,ACXL,CAAiB,CLbQ,AKaP,AEPR,CFOS,CAAnB,EAAsB,CAAC,AKJ5B,AHH+B,CFOF,AKJM,AHHpB,CFOV,AKJL,CJDqC,AIAL,CJAM,ADKN,AEPG,CFOF,AEPxC,CFOyC,CAA7B,EACX,ECNK,CAAP,KDKa,CACF,aAAO,OAAP,CAAe,GAAf,CADE,EAEX,QAFW,CAEF,aAAO,SAAP,CAAiB,CAAC,CAAC,CAAC,CAApB,EAAuB,CAAC,CAAC,CAAC,CAA1B,EAA6B,CAAC,CAAC,CAAC,CAAhC,CAFE,EAGX,QAHW,CAGF,KAAK,KAHH,CAAb;ACJA,AEYM,AIRJ,ACAA,AFNA,AXNF,ASQY,ANOP,ACSH,ACRF,AKPA,ARJA,AKCC,AUCA,AFWA,AGXD,ACRD,ITUC,ARJA,EUOE,ACAA,AFNA,AQPC,GjBME,AeED,CfFE,CFLC,AGcS,AOLT,CFWD,ALPH,AgBdM,CTUA,CEGC,ACAA,AFNA,ADIT,CRLD,CUOY,ACAA,AFNA,AQPC,EXqBD,EAAE,ARpBd,KmBDD,EAAyB;AXkBnB,AILS,ACAA,AFNA,AXLd,ASKC,ANeG,ACIF,AMdA,ARLF,AeEE,AERF,GjBnBM,CAAP,AiBmBC,CVKS,ALkBS,CMZhB,CDDD,ALeI,CQbS,ACAA,AFNA,APiBI,AafhB,EdaE,ACII,CITQ,AJOE,AevBX,CXeJ,AWfK,CfyBG,AMdF,CECW,ACAA,AFNA,APiBF,CMZP,AOHF,CLIa,ACAA,AFNA,APoBpB,AMhBD,AOFS,CbeQ,CevBlB,Cf0BK,EDLU,CcbC,CdaC,ACKR,CAAC,AalBD,CAAP,EdamB,ACKhB,CDbF,ACaW,AalBQ,GbkBjB,CAHa,EAGE,CAAC,AalBQ,CAAC,GbkBL,AalBQ,CbkBP,CalBG,CAA3B,CbkBmB,CAAS,GAAT,CAHH,EAGkB,CAHlB,EAIhB,CAJgB,EAIb,IAAI,CAAC,GAAL,CAAS,GAAT,CAJa,EAIE,IAAI,CAAC,GAAL,CAAS,GAAT,CAJF,EAIiB,CAJjB,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP;AElBZ,AEaK,AIXQ,ACAA,AFNA,AFKV,ANWE,ACOF,ACXH,AKNG,ARLH,AKAC,AUEE,AFUF,AGXD,ACPC,EbSD,ADQA,IIPG,ACCA,COLD,CFYG,AGXC,CbUC,CGKF,ALDA,AEJG,AcjBD,CZMD,AQYL,CTTS,ACHT,CEIS,AJOH,CKNI,AQJC,CZEF,AGCE,AJOO,AYTR,AERC,CVSV,ACEW,COHA,ACDE,CfcF,AgBrBE,EhBqBA,AcbJ,CTcK,EAAE,ASdC,ACDE,CDDnB,ACCoB,ECPC,CXsBD,AWtBE,CXcpB,EUPJ,UCPe,CAAuB,KAAvB,CAAd;AbUA,AEaI,AIdH,ACAA,AFNA,AXFF,ASUG,ANCC,ACUe,ACJlB,AKPc,AHJb,AUEA,ACDF,ACPC,IAAA,CPGS,ACAA,AFNA,APwBR,CKXC,ALUK,AcbJ,CNKF,ACAA,ATQD,CMVc,AHJb,CDGI,AHVM,AEkBN,AcjBA,CXsBD,AWtBE,IVUI,AJOV,AKPoB,AQHT,ETGC,ACAU,AHJb,CFWI,AEXH,AWC8B,CVe5B,ADhBD,CDGX,AaTA,CXsBc,ARtBf,COMe,CDGI,ACHR,AYNQ,GZMA,CAAT,AWCV,ClBPO,AOML,EYND,CnBAU,AKiBU,AEXG,CAAC,CAAvB,GDGwB,CNTT,CKiBH,CAAe,GAAf,CLjBS,CAAC,AKiBU,GCRf,CAAmB,IDQxB,CCR6B,ANT1B,AKiB0B,CLjBT,EMSf,CNTF,CMS+B,ANTV,AKiBU,GCRG,CAAC,CDQtC,CAAb,ICR+C,CAAW,GNT1C,CAAoC,EMSlC,EAAgD,CAAhD,EAAmD,IAAnD,CAAlB;AACA,AEGG,AIAD,ACAA,AFlBsC,AXMxC,ASSc,ANdL,ACkCT,ACZA,AKRY,ARHP,AKAJ,AUED,AFSA,AIjBA,GRNa,AMXd,CNWA,AXMC,EYYE,ACAA,CVlByC,CMe7B,AFHb,AQWG,CPjBO,AOiBN,CIjBC,CXuBH,ASfK,CFSA,CHLC,ACAA,AEKT,CNRoB,CGGT,ACAA,AXNS,AaWT,CHNV,ACAA,AJFqB,AFHb,AUEI,CVFH,AYNG,CZMF,CPNI,AiBQC,CERA,CnBAC,AOMH,CAAJ,GAAQ,CAAT,CAAR,AUvBF,CfuBM,AiBNmB,CjBMU,AiBNT,CZMF,GLAlB,CKAsB,CLAmB,AKAlB,MAAL,CYNP,CAAuB,GZMA,CAAhB,CYNP,CAAhB,CZM2C,CAA1C;ACkBG,AIXF,ACAA,AFNH,AXRqD,ASUxC,ANcX,AOhBA,ARAF,AKAE,AQWA,AGXF,ACNC,GnBFgB,CAAjB,AmBEC,CTKS,CEOP,ACAA,AVUD,AYLA,AGXE,CRIF,CCJI,AJAJ,CLAK,AaWF,CPMA,CWvBG,CJiBA,AGXE,ACND,CjBME,AaWT,AGXS,CNMA,ACAA,AVUD,AehBN,CPAS,CCMA,ACAA,AVUD,AIhBF,CAAC,CIAK,AJAJ,CWAK,CViBF,ANjBR,CSAY,ATAA,AKAJ,AYNd,CXuBgB,AGjBG,ATAA,AKAT,CCkBL,CWxBe,CZMF,CAAT,CAAR,CIAc,AOAZ,CPAuB,ATAR,CKAK,CLAK,AiBN5B,CDM6B,EXAF,CAAC,ELAV,CgBAiB,CAAC,CAAP,CXAN,CLAe,GgBAI,CXAH,CAAhB,EIAR,CJA4B,CIA5C,AJAE,GWAE,IAAoD,MAAM,CAAC,CAAP,KAAa,SAArE,EAAgF;AZIhF,AEeO,AIbQ,ACAA,AFLf,AXNA,ASKE,ANiBC,ACOU,ACbb,AKNG,ARJF,AKAC,AUCF,AFUE,AGXD,ACNA,EbSD,ADOA,EaVC,ACNA,CVAS,AMeT,CLLE,CDDD,CGEa,ACAA,AFLT,ARgBH,CCOI,AatBA,CfDA,CIGE,ASQD,AIjBA,CbSE,AEeH,AUlBE,ACNA,CbSA,AICC,CECW,ACAA,AVWZ,AENG,CCPS,AKHR,APuBA,ACbA,AKND,AKOA,AGXA,CZGH,AMEc,ACAA,AVWZ,ACOG,AMpBZ,AOFF,AFUa,CbXC,CIGkB,AKHhB,ANUJ,CCPH,ANTT,AI6Ba,AcvBG,CbUQ,AHVP,AaWA,CTRwB,AFoBd,AWZnB,AIjBP,ChBqBW,CYJQ,CbXC,AiBNA,CRME,AXNjB,AI6BO,CILQ,AGlBG,CPuBe,CILhB,ARxBb,CQuBJ,EUjBM,CAAiB,ElBNb,IEMC,AgBAkB,CAAC,ChBAnC,CFNsB,CWMP,AXNQ,CWMiB,EAAzB,AOAa,CPA7B,AQNC,EDM4C,CAAjC,CAAX,KlBNe,EAAhB;AMUC,AEeM,AIdM,ACAA,AFJb,AXNA,ASSG,ANaA,ACOF,ACbA,AKNE,AOHH,AFUE,AGXD,ACNA,ERMD,AXNA,EmBAC,EVSE,ACCA,EVVG,AGsBH,CGbG,AKHC,AXNA,AmBAD,CRME,APuBD,ACbA,AchBA,CdgBC,CGQD,CFfN,ANTD,ASSU,ALoBA,CJ7BE,AKgBD,AKNA,CDDC,CHAC,AGDX,ALqBW,AMnBA,ASVZ,CAAa,CXwBD,ARxBb,AGsBa,CHtBK,AKgBF,CGQD,ALFA,ACOE,COvBjB,APuBkB,COvBE,CXNH,CQwBE,AJKN,ACbF,AchBV,CXsBK,AJOgB,ACbA,ELhBI,CI6Bb,CEpBO,AFoBnB,ICbU,CFIC,CEJX,EMVD,CLGa,CAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAC,CAA1B,EAA6B,QAA7B,CAAsC,KAAK,IAA3C,CAAZ;AACA,AEeM,AIjBL,ACAA,AFDF,AXNC,ASSE,ANaA,ACOF,ACbA,AKPc,ARJd,AKAA,AQYC,AIjBD,ERMD,EXNC,AEKA,CUPS,ACAA,AEiBF,CNNL,CGED,ACAA,CVWC,AObY,CCHR,ANUD,CMVE,APuBD,Ae7BA,CnBAC,AEKA,AKAF,AQYE,CPOD,ARxBE,AEKA,AKAR,CHwBS,CKpBC,AJOV,AKPoB,CVTpB,AGsBS,CHtBG,ASSA,ALoBA,AMpBU,CPaX,AENE,AchBA,CXwBD,ALDT,EKCW,ARxBd,AI6BgB,Ae7BA,Cf6BC,COvBlB,CAAqB,CAArB,APuBa,CAAS,COvBE,EPuBX,Ae7BY,Cf6BxB,Ae7ByB,CdgBL,AHXpB,CSCD,ETD8B,MGWhB,AHXqB,CGWJ,CAAC,CAAC,AchBhB,CdgBH,AchB0B,EdgBJ,CAAC,CAAC,CAAxB,AchBG,CAAhB,CdgBwC,CAAC,CAAC,CAA7B,EACX,QADW,CACF,aAAO,OAAP,CAAe,GAAf,CADE,EAEX,QAFW,CAEF,aAAO,SAAP,CAAiB,CAAC,CAAC,CAAC,CAApB,EAAuB,CAAC,CAAC,CAAC,CAA1B,EAA6B,CAAC,CAAC,CAAC,CAAhC,CAFE,EAGX,QAHW,CAGF,KAAK,KAHH,CAAb;AGKK,AITH,ACAA,AFLH,AXNC,ASQc,ANeV,ACMJ,ACVA,AKXY,ARHX,AKAA,AQYA,AGXF,ACNC,ERMD,CXRA,CmBEC,EPWE,ACAA,AEMD,AGXE,ETEW,AFHb,CICK,AIWF,CJXG,ARiBH,ACME,AFxBD,CMcW,AUbR,ACND,CXkBJ,AODI,AIjBC,CPWC,ACAA,AEMD,CNTY,ALqBV,AcvB2B,CNK1B,ACAA,CDDV,ACAA,AJFqB,ANeZ,AIlBD,AQYE,CXYE,AFxBD,AKAF,AQYT,CJXF,ARiBa,ADlBC,AKAF,CICK,ERiBD,ACME,AGxBH,AYLd,ChBuBgB,AIlBN,CICU,AOArB,CPAsB,APuBrB,Ae7BoB,Cf0BkB,AGrBpB,CHyBlB,AGzBS,CAAR,CICe,ATDX,CSCqB,CJDH,CAAtB,CLA0B,AiBL3B,CjBKK,ESC2B,ETDA,CSCG,GAAnB,CAAjB,ETDwC,CAAC,MAAR,IAAkB,GAAjD,EAAsD;AIKxD,AEgBK,AIdF,ACAA,AFLH,AXLA,ASMa,ANcT,AOhBF,ARAC,AKAD,AQYA,AGXF,ACNC,EbSD,AKHA,EQNC,CTAS,CEWP,ACAA,AKLC,CRGF,CRJC,AKAD,CDIK,AKHA,ARcK,CGXJ,AEgBH,AGnBG,CQNA,CAAC,CbSF,CMEI,ACAA,CPFQ,AJJT,CUMG,ACAA,AXNF,AKAD,CICV,AJDW,CAAC,AWCI,ClBLhB,EQwBgB,ADpBD,AWCY,ACN1B,CZKU,CCoBO,ANpBA,CAAC,AiBJjB,CnBAI,AOIa,CAAT,CCoBY,ADpBpB,CCYE,ARhBK,EOIe,AWCxB,IXD4B,CAAC,CPJZ,AEIP,CFJQ,AEIf,IKAqB,KAAgB,CAAhB,GPJf,AOImC,CPJZ,AOI9B,QPJO,CAAT,wCmBDC;AbUA,AEgBI,AIfU,ACAA,AFJf,AXLA,ASGE,ANYU,ACaX,ACVD,AKVG,ARJA,AKAD,AYJD,ERKD,ANaA,EclBC,CRKE,AFXO,CEWN,ADGD,CPtByC,AEgCvC,COTU,ACAA,ARST,AEdJ,CDII,ADUD,AclBC,CXwBD,AWxBE,Cf4BC,ACVS,CMbjB,ANaK,CCVJ,AKHU,ADGD,CECW,ACAA,ARSO,CDUhB,ACVP,AKVO,CJAC,AMCU,ACAA,AHFrB,AHHQ,AYJT,CdkBoC,AEd1B,AYJG,CXwBD,AGnBb,AJDY,CICK,CHmBF,ARxBf,CI4BQ,AGxBO,CHyBb,AGzBS,EYJV,CRKD,AJDmB,CICK,APwBlB,AGzBI,CICe,AXLlB,AOIL,EDIkB,CNRV,AOIc,IICQ,AJDJ,CICK,AJDJ,CDIhB,ANRG,CMQY,ANRX,CMQY,AFqB3B,CAAiB,EErBN,AKHY,AJDD,EDIU,AKHV,CAAxB,EJDwC,CPJ9B,AOIc,CPJI,EOIgB,CDI/B,ACJX,CDIyC,INRjC,CMQsC,ANRhD,IMQa,CAAZ;AACA,AEMG,AINS,ACAA,AFHb,AXJA,ASVyC,ANgCvC,ACMC,ACXF,AKVE,ARJD,AKAA,AQWD,AGXD,ACJC,GVTa,CAAd,AMwBC,AIfA,CjBAA,CCuBC,AOfC,AQJC,GVbQ,AH2BN,EUHE,CACN,AGZQ,ACJD,CDIE,ACJD,CdkBT,AKVU,EAAE,AQJT,CbcU,AclBb,ChBuBa,AYPN,AIhBO,CnBCf,CGsBgB,CYPL,AGZQ,CHYjB,EIhBD,CnBCK,AeeS,AIhBO,GnBCb,AecD,EVGa,AUDnB,AGbE,ACJH,IDI+B,ClBHhB,AKiBF,CLjBG,AKiBU,CAAb,EAAgB,CAAhB,AadwB,CAAC,CbcN,CAAnB,EAAsB,AadJ,KAAgB,GbclC,CLjBL,AKiBoC,CLjBT,IKiBc,AadlD,EAA2D,ClBHlD,CAAT,CKiBc,CAAb;AG9BS,AIkBR,ACAA,AbHF,ASKA,ANgBG,ACMA,ACXF,AKXc,AHlCd,AQ2CG,AGZH,ACJA,If6BE,AczBF,CNZS,ACAA,CEwBN,CP9BwC,AO8BvC,CNTC,ANgBH,ACMI,AMtBQ,CNsBP,AWbD,AGZD,CdyBH,AWbD,EGZO,CdyBC,CDND,AOhBY,CDAR,CNgBF,AOhBY,AQHV,CdyBC,CKtBE,ALsBD,CJ3Bf,AI2BG,EKtBgB,CAAC,ALsBH,GJ3BX,CI2BH,EJ3BM,ASKO,ASHP,CTGkB,ALsBH,AczBE,CfkBV,ECKG,EAGhB,Cc1B6B,CAAC,Ed0B1B,CAAC,CAAL,Ec1BuB,Cd0BhB,Ec1BgC,CAAjC,Cd0BK,Ac1Bb,Cd0Bc,CKvBC,ALuBb,EKvBH,CLuBiB,IAAd,GAAqB,IAAI,CAAC,CAAL,GAAO,GAHZ,EAIhB,IAAI,CAAC,CAAL,GAAO,IAAI,CAAC,CAAZ,GAAc,IAAd,GAAqB,IAAI,CAAC,CAAL,GAAO,GAJZ,EAKhB,CALgB,EAOhB,IAAI,CAAC,CAAL,GAAO,IAAI,CAAC,CAAZ,GAAc,IAAd,GAAqB,IAAI,CAAC,CAAL,GAAO,GAPZ,EAQhB,IAAI,CAAC,CAAL,GAAO,IAAI,CAAC,CAAZ,GAAc,IAAd,GAAqB,GARL,EAShB,IAAI,CAAC,CAAL,GAAO,IAAI,CAAC,CAAZ,GAAc,IAAd,GAAqB,IAAI,CAAC,CAAL,GAAO,GATZ,EAUhB,CAVgB,EAYhB,IAAI,CAAC,CAAL,GAAO,IAAI,CAAC,CAAZ,GAAc,IAAd,GAAqB,IAAI,CAAC,CAAL,GAAO,GAZZ,EAahB,IAAI,CAAC,CAAL,GAAO,IAAI,CAAC,CAAZ,GAAc,IAAd,GAAqB,IAAI,CAAC,CAAL,GAAO,GAbZ,EAchB,IAAI,CAAC,CAAL,GAAO,IAAI,CAAC,CAAZ,GAAc,IAAd,GAAqB,GAdL,EAehB,CAfgB,EAiBhB,CAjBgB,EAiBb,CAjBa,EAiBV,CAjBU,EAiBP;AEnCZ,AEiBE,AIpCuC,ACAA,AbaxC,ASKD,ANgBG,ACqBA,AMtCU,ARHZ,AaYS,AGXT,ACJA,EbQD,CMnBc,ACAA,CDAd,ACAA,AbaC,AECA,AgBCA,EVqBC,AOVQ,CAAC,CNRL,ANgBH,CGfI,ASOM,CTPL,ANND,AeaL,CbZM,CFDC,AECA,CIKF,CEiBG,CFjBS,AGDN,CDkBD,ANtBX,AgBCY,ChBDC,COIE,CSHA,GhBDf,EAAoB,COIE,ANgBH,AenBE,CTGE,ASHD,CfmBD,CDpBrB,CgBCe,EfiBA,GejBe,QTGf,CAAyB,ASHzB,ETGA,CAAhB,ASH2C,MAAM,CAAC,IAAlC,GAAyC,MAAM,CAAC,GAA/D;AZKA,AEiBE,AIhBH,ACAA,AbTS,ASOT,ANgBG,ACEgB,AC1DC,AKoClB,ARAD,AKAA,AQWe,AGVf,ETGD,CTPA,CEGC,AKAA,CHsBC,AM/BQ,CN8BF,AWVQ,CXUf,AWVgB,CPWd,AIhBG,ACAA,AVcH,CGfG,AGDC,AMOY,CNPX,CPJA,CAAC,AKAA,CDKR,ACLS,CCsBD,ADtBE,CKME,ACAA,CPDA,AEiBF,ANtBV,CKAa,CKME,ACAA,ANNN,EJoBK,CSdI,ACAA,AJFnB,AFJkB,CCqBN,AIfQ,ACAA,AJFA,ANgBH,AIpBR,CAAR,IAAuB,CKMR,ACAA,CPDI,AMCO,ACAA,GNNE,GAAG,CDKnB,CAAe,AGD5B,CHC6B,CCLO,CAAC,CDKxB,EAAqB,GCLF,EAA/B,CKMe,ACAA,EPDH,AMCb,ACAA,CPD2C,KAAK,IAAnC,CAAZ;AACA,AEiBE,AIhBH,ACAA,AbNA,ASIA,ANYgB,AC0Bf,AMtDwC,ARYxC,AKAA,AQUC,AIdF,EVQA,AURA,CTRc,CAAd,ARYC,AKAA,CQQO,EZ9BoC,AYiC1C,CPWC,AIhBG,ACAA,CJFC,AURA,CVQC,AURA,EZIC,CAAC,CLAC,AKAA,CKME,ACAA,AXND,CiBJZ,CZIc,AYJC,CX0BF,AIhBG,ACAA,ANNN,ECsBK,ARtBf,CEAW,AKAO,CEIlB,AFJS,CEIY,APJD,AKAnB,AYJD,CVQA,CGEuB,ACAA,CDAC,ACAA,AJFA,CTJjB,AEAI,AKAa,ELAE,CFAhB,CSIV,CFJ6B,ECoBjB,CDpBoB,CPAhB,CAAC,EOAmB,CAAC,EKMrB,ACAA,CDAyB,ACAA,AXN9B,CAAV,CUMe,ACAA,CDAhB,ACAA,ANNgC,EAA/B,EPAS,CAAqB;AQuB5B,AIhBH,ACAA,AbNC,ASID,ANgBE,AOhBF,ARJC,AKAA,AQUG,AGTJ,ACJA,EPSA,ACAA,AJFA,CPdO,CFUN,AEVD,AKUC,EJoBC,AYVE,AGTA,CHSC,CPYF,AElBG,ASPA,CPSC,ACAA,AJFA,AMMA,CHJC,ACAA,AJFA,AMMN,CIbO,CZGA,AWCC,ClBDA,AOAA,AWCC,CXDA,AYHC,CXyBF,ARtBE,AGoBD,AOhBE,EFkBD,ALFC,AIpBC,AWCV,CVsBA,ACnBJ,ACAgB,AHJN,AYHM,CVOC,EGEjB,ACAA,ANNkB,CKME,ACAA,ANNX,AWCW,ClBFW,ASKV,AFJpB,CEIqB,CCAC,CAAC,CHJA,CEIP,CAAU,ASH3B,EAA6B,CXDA,AYHjB,CAAW,EVOU,AFJD,EKMhC,ACAA,AMT2B,CVOS,AUPR,CZGQ,CAAC,AYHd,CVON,CAAjB,ACAgB,CSPiB,CTOjC,ASPY,CAAZ,CZGgC,EAA/B;ADKD,AEmBK,AIjBL,ACAA,AbNC,ASID,ANgBG,ACsBW,AMtCd,ARJA,AKAC,AQSS,AGRT,ACJD,EbOA,AMEA,ACAA,AJFA,ACAA,ASPA,EnBGC,CmBHE,CJYO,AIZN,CJYO,CZWR,CSdI,ACAA,AJFA,ALsCA,AMtCA,AKKM,CPcR,AIjBG,ACAA,AJFA,ACAA,AKKN,AGRK,GlBDG,EMIG,ANJD,AmBHZ,CbOc,AEmBH,ALHA,ACsBG,Ae7CA,CVOd,ALsCe,Ae7Cf,CX0Ba,ALHA,CGhBA,AaPI,Cf6CH,Ae7Cd,CbOyB,AEmBT,AEnBhB,CFmBiB,AIjBjB,ACAA,AToC0B,AMtCN,ASPA,CPSC,ACAA,AKLD,CNKpB,ACAA,AMTA,EPSwB,ACAA,AKLD,IAAI,CNK3B,ACAA,MHFA,GQHuB,CAAe,IAAf,CAAtB;AZIA,AEiBG,AIfJ,ACAA,AbT+B,ASO/B,ANca,ACwBZ,AMtCD,AKIgB,AGPf,ACHD,EPQA,ACAA,AJFA,ACAA,CVPU,CAAV,CSOG,CAAC,AMIY,CAAC,CGPZ,ACHC,CXsBM,AIdL,ACAA,AHFA,AKIY,CTJZ,AMEC,ACAA,AHFA,AKIY,CXkCZ,CKtCR,CAAW,CHAA,CFsCC,Ce5CE,CbMA,CMEd,ACAA,AJFA,ASHe,CNKE,ACAA,AJFA,AUNA,Ef4CT,AczCU,CZGC,AFuCjB,AMvCF,CEEqB,ACAA,AHFA,AQHpB,ACHoB,CPQC,ACAA,AHFtB,CDAA,CHAc,AGAU,ALuClB,AMvCkB,CJAA,AGAC,CGER,ACAA,CDAU,ACAA,EHF3B,GDAgC,CGEC,ACAA,AJFA,GGEG,ACAA,ATqClC,CAAiB,EEvCL,AMEG,ACAA,AJFQ,AUNR,CbMsB,AMEvC,ACAA,CJFwB,AUNxB,CVMA;AHAyC,AEa7B,AIVZ,ACAA,AbLA,ASGA,AN9B4C,ACqEzC,AMvCH,AHLA,AQQE,AITF,EPQA,ACAA,AbLA,AUGA,ASNA,GhBxBY,AY8BJ,CTDiC,AH7BxC,CG6ByC,AE3BE,AOgC1C,CfPI,CMEsC,AMGrC,ACAA,AbLA,ASGA,ACAA,AHLA,CDIgC,AMG/B,ACAA,AHFA,ASNA,CAAC,CZCC,CAAC,CPEL,EAAQ,ASGd,AUNA,CPQA,ACAA,AMRe,CTMf,ASNA,CTMiB,CSNC,CAAlB,CnBGM,CAAN,AUGqB,ASNA,CTMC,ASNtB,CZCO,CAAiB,EGKP,CAAU,KHLpB,CGK0B,CHLC,EGKE,GAAnB,CAAjB,QHLgD,CAAC,MAAf,GAAwB,cAAc,CAAC,OAAlE,CAAP;ADI+C,AEsB7C,AIlBF,ACAA,AbJA,ASEA,ANgBC,ACuBE,AMvCH,AHLA,AQQI,AGPH,ACFD,EPQA,ACAA,AHFA,ENuCG,CQrCA,ACAA,CPJ4C,AEsB7C,AIlBE,ACAA,AECA,CTL4C,ASK3C,CXoCE,Ae7CD,CbI4C,ANA3C,AIyCC,AMvCD,AKGA,AGPD,CZEiC,AIE/B,AKGN,EHDF,ACAA,ATqCG,CQrCQ,ACAA,ATqCC,Ac3CF,CAAC,ACFC,CnBIZ,CIyCG,CAFgB,AMrCnB,AQJc,ACFC,CX0BD,AIlBd,ACAA,CDAiB,ACAA,ATqCC,CInBF,AJiBG,Ce3CA,Cf6CE,Cc3CD,CAAC,CNMrB,ACAA,CDAwB,ACAA,ATqCC,CQrCA,ACAA,ATqCC,GAAL,CAAS,Ec3C7B,CNM+B,ACAA,ATqCX,CQrCY,ACAA,ATmCd,AczCa,CAAC,Cd2CG,CAFjB,CczCiB,ACFrB,Cf8CZ,CQtCsB,ACAA,ATmCN,Ae3CnB,EPQwB,ACAA,ATsClB,Ac5CkC,CNMxC,ACAA,ATmCmB,AczCsB,Ed4ChC,CAHU,EAGP,CAHO,EAIhB,CAAC,Cc7CH,EAAoD,Cd6C7C,Ac7C8C,Cd6C7C,Cc7CR,Ed6CG,Ac7CsD,Cd6C7C,GAAT,CAJe,EAIA,CAJA,EAIG,IAAI,CAAC,GAAL,CAAS,GAAT,CAJH,EAIkB,CAJlB,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP;AE5CyC,AEuBlD,AIlBH,ACAA,AbJA,AI4CG,AM1CH,AKEU,AGNR,ACDF,ETKA,GAAG,CJHkD,AIGjD,AKEM,AGNR,ACDE,CbEkD,ASK3C,AIPN,CXyBF,CFvBqD,ASK3C,CAAX,AIPM,ETKR,ASLA,CTKW,CFoBF,EAAE,AUxBC,ERIZ,CAAiB,CQJD,KRIhB,CAAwB,AQJF,CRIG,AQJF,GVuBP,IEnBgB,CAAC,IQJjB,CAAoB,CRIX,EAAD,CAAxB,SQJiD,CAAC,CAAD,CAAjC,CAAd;AZCqC,AEwBpC,ACpBG,ANgBN,ACmBmB,AMlCnB,AKAgB,AGLd,ACDF,KbCc,AFuCZ,CEvCD,AFsCO,AWjCQ,AINZ,CfuCH,AWjCgB,CPmBd,ALJG,COfC,AKAY,CINX,GhBqBG,AgBrBA,CAAX,CVKqB,CNgBP,AOfd,IPekB,CMhBZ,CACN,GDmBoB,EAAE,GCpBhB,CDkBU,CChBhB,ANcc,CAAiB,EAAjB,CAAd,KMhBM,EAGN,MAHM,EAIN,OAJM,EAKN,CALM,EAMN,MANM,EAMQ;AHTb,AEwBE,ARtBE,ASSL,ANSA,AC2BC,AM1CD,AKDE,AILF,EhBqBA,GYpBQ,CNWJ,AMXH,AIDG,EXyBD,CFxBG,ANES,CGkBP,CAAC,CgBrBC,CbCT,ENEI,AGkBL,AgBrBa,CbCA,ANES,AGkBR,IKIC,ACbG,CTTb,AGkBL,AgBrBA,CXyBiB,CRtBoB,AGkBhB,CMTC,ANStB,KGpBoB,ANEf,EAA8C,ESSnD,EHXa,AGWoB,CHXN,CAAC,GAAf,EAAoB,IAApB,EAA0B,QAA1B,CAAmC,KAAK,IAAxC,CAAZ;AACA,AEoBe,ARlBhB,ASSC,ANSD,AYfC,AGLA,ACDD,EnBGA,EeGC,EING,CX5BwC,CLiDtC,CHlBC,CAAC,ASSD,ASXA,CHKC,CACN,CNKQ,CNSE,CepBA,ACDC,CVYA,CNSE,CYdP,AGNO,ACDC,CnBGhB,CAAkB,AGkBA,CAAC,AYdR,CNKQ,AMLjB,EIPF,CJOe,GADP,AGLiB,CAAC,CHOxB,GZaa,CAAiB,AepBjB,CAAiB,IfoBjB,AepBA,CAAd,CfoBsC,MMTN,QNSoB,CAAC,OAAvC,CAAf,KMTmB,CAAlB;ADcC,ARtBD,ASSA,ANSD,AC2Bc,AM1CR,AKCF,AGNH,ACDD,EhBqBA,EHlBC,CGkBE,CKID,ALJE,AYdA,AIPA,CJOC,CGNA,Cd+CE,AWzCA,CfJA,ASSA,ASXA,ACDC,EnBGC,CkBFC,ACDuC,CDChD,CVwBU,AEnBU,AKCnB,CNKW,ANSb,AC2Bc,CIvBD,ALJE,AC2BA,CJ9CG,CSUF,CLoCF,CM1CR,ASNN,CfgD0B,AMzC1B,GDKsB,CAAC,ENSvB,CMTgB,ANSW,CMTA,ACNrB,EAEN,CDIgB,CAAf,GNSD,IOfM,EAGN,MAHM,EAIN,OAJM,EAKN,CALM,EAMN,MANM,EAMQ;AJXd,AEyBG,ARtBF,ASSA,ANSD,AC2BC,AMnCD,AKPe,AINf,EbAA,ENGC,ASSA,ECCG,AKPW,AINX,CJMY,CPmBb,ALJG,CGrBC,ASMW,CTNV,ANGD,AeGL,CX0CM,AehDC,CnBGA,CMHF,AHqBI,CgBrBC,CbAO,AFgDP,CIvBD,ALJG,EKID,ARxBK,ASWH,CNSE,CAAC,AORA,CDDA,ALoCV,CACN,EKrCmB,ACCC,CDDA,CNSR,AC4BR,CD5BmB,IMTP,CAAW,CCC7B,CFWa,CEXoB,GNoC/B,CAAiB,CejDM,EhBqBX,CAA2B,GgBrB7B,CAAZ,KVYkB,CAAgC;AHXjD,AEyBE,ARtBF,ASSC,ANSD,AC4BE,AMpCF,AKRoB,AGLpB,ACAD,InBGC,AGkBA,EMTC,AMPmB,AILjB,CJKkB,CPoBnB,ARtBE,CMHC,ASKkB,AGLlB,ClBGC,AGkBA,AORA,EDDC,ANSC,AgBrBC,CbAT,AIaS,AQbA,CTYA,ASZC,CCAE,CbAA,AIaA,CQbC,CAAb,EfqBgB,AerBA,CfqBC,AerBA,CRaC,EFYA,AUzBE,EVyBA,GFzBD,AYAM,CAAC,IVuBd,EFvBA,AYAZ,CZA2B,CAAC,AYAM,CfqB1B,AerB2B,CfqBC,AgBrBX,CbAb,AHqBJ,CADgC,CGpBP,AYAM,EAAE,CCA7B,CTaoB,ASbjC,EDA8C,CAA7C,CZAY,CAA8B,AYAM,KZAD,IAAnC,CAAZ,OIakB,CAAlB;AJZA,AEyBE,ARvBM,ASUN,ANSF,AC4BE,AMpCF,AKTC,AGJA,ACCF,IhBoBC,AC4BE,CW/CK,CfAC,CeGP,CPoBC,ACbA,ALqCI,AehDD,CfgDE,CMpCD,CVXO,AGmBN,CC4BL,AcjDK,ACCE,CnBCM,AGmBN,AC4BE,CKrCH,ANUP,CgBrBW,CXwBF,ACbA,ALqCR,AMpCU,AQbD,Cd+CO,CItBN,ARvBN,CI+CW,AMpCF,AQbD,CdiDI,EKtCT,ELsCa,AcjDH,CdiDI,AMpCF,AQbD,CRaE,AQbH,CAAL,CdiDI,AcjDK,CdiDI,AMpCZ,CAAW,ENoCR,CAFA,AMlCH,AQbD,CRad,AQb6B,CdiDI,CAFf,Cc/CJ,ACCS,CfgDa,AcjDnC,Cd+CiB,Ae9CN,CAAb,CfiDG,IAAI,CAAC,GAAL,CAAS,GAAT,CAHgB,EAGD,IAAI,CAAC,GAAL,CAAS,GAAT,CAHC,EAGc,CAHd,EAGiB,CAHjB,EAIhB,CAJgB,EAIb,CAJa,EAIV,CAJU,EAIP,CAJO,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP;AI9BC,ARpBU,ASWpB,ANUA,AC8BA,AMvCF,AKTG,ILSH,EVZsB,AGqBpB,AYlBC,CAAC,CNQF,CMRI,CAAC,EfHqB,CGqBnB,CHrBqB,CGqBnB,CADV,AYjBA,ENQW,ACCE,EDDA,CCCG,GAAG,CAAC,MAAJ,CDHR,ACGmB,oBAAX,CAAgC;AJ9DhC,AEgB0B,ARkCrC,ASYJ,ANUA,ACuBgB,AMhCjB,AKVc,AGJd,ACEF,EAAA,GXnCY,AJ+EV,CI/ED,ALwDE,ACsBK,AM/BN,AKVc,CXyCf,AWzCgB,CNSd,CMTgB,AIFZ,CJEL,AGJI,ACEE,ETYA,EPSG,AOTD,CDDA,CNUG,CMVD,AUXZ,CDFc,ECEK,EAAD,CDFC,GCEM,MDFvB,EAA4B;AV2B7B,AR7BiB,ASYR,ANaK,ACgCd,AMxCE,AKXmB,AGHnB,ACEF,GnBLD,CQ6BC,EOvBqB,CNK4B,AML3B,CZmBR,AORZ,AQdA,CHGsB,CIDlB,IXwBI,ALJU,AORZ,CSZG,ChBoBW,AORZ,AQdA,CV0BG,AU1BF,CCEG,ChBoBW,AetBZ,CV0BG,ALJU,CKIT,CEbR,AQbO,ACEE,CDFR,CAAR,ACEkB,CAAC,EDFA,ICEH,EXwBL,CACZ,AWzB6B,GDFC,CV2B1B,AU3B2B,ACEhC,IDFoC,CAAC,MAAM,CV2B1C,AU3B2C,CV2B1B,AU3BkB,CV2BjB,AU3BY,CV2BX,AU3BlB,GV2BgB,EAAO,CAAC,GAAR,EAAa,GAAb,EAAkB,CAAC,GAAnB,EAAwB,CAAC,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,CAAjB,CADY,EAEZ,cAAc,CAAC,MAFH,CAAb;AAIA,AR5BD,ASYE,ANQW,AOPV,AKZD,AGFC,ElBCH,GeFQ,CNcN,CMVA,CfFI,AUaH,AQdA,ClBCI,KAAP,ASYU,EAAE,ASbD,ClBCI,AkBDH,CRcC,CQdC,CRcC,EVbf,AkBDiB,CAAN,CAAR,GAAmB,KRYZ,KQZsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAR,CAAL,CAA7B;AlBEH,ASYG,ANKD,ACoCU,AMxCT,AKZC,AGFD,ACCF,EnBAD,GGgBU,CYfN,CZoBF,AYpBG,CfDC,ASYH,ACCA,AQdA,ACCE,CnBAE,AIqDA,AWpDA,CAAL,AIDK,CAAC,GVYC,ALyCG,CJrDZ,AIqDa,AMxCH,CDDC,ALyCC,ActDD,CRcC,AQdA,ClBCI,AIqDQ,AerDnB,CfqDO,ActDE,EdsDqB,CK1CvB,AL0CA,ActDK,ACCE,CDDR,ClBCX,AIqD4C,ActDzC,GAAmB,ACCrB,EAAyB,QDDM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAR,CAAL,CAA7B;AV8BH,AR3BA,ASWG,ANSA,ACgCF,AM5CS,AKTA,AGDP,ACCD,MhBqBC,AYrBO,AIAR,CTQgD,AKRvC,CP4BL,AChBH,CMZU,CAAX,CXqDM,EIzBG,ALPD,CgBrBA,ChBqBE,ACgCA,AerDD,CX4BG,ALRZ,EHnBF,ASWa,EDgBK,AChBH,AUZb,CfqDM,AerDS,CfsDf,CJrDG,GAAG,AIqDF,AetDJ,EAAsB,IX4BV,AR3BA,CQ2BiB,AR3BhB,AmBDb,CVUU,CUVmB,GX4BK,AJ0BlC,CI1BY,AJ0BK,CI1BnB,AW5BE,MnBCM,CAAqB;AQ4B7B,AR3BC,ASWE,ANSA,ACiCA,AMzCD,AKdc,AICd,EX4BF,ER3BC,CmBHA,ChBuBE,AORD,AKdc,CAAC,CfEZ,ASWF,CMbgB,CP6BX,AR3BD,CQ2BE,AW5BD,GhBqBG,AORD,CFeV,AChBU,CDgBI,ALPD,AORD,CDDA,CACR,GDeJ,EAAqB,CAArB;AACA,AR3BE,ASYG,ANOU,ACkCZ,AMzCA,AKfD,AGAA,ACEA,EX4BF,EJ0BG,CAFgB,AW1DX,CfON,AePD,CPkCI,AJ0BC,CI1BA,ALRS,ACgCI,AMvChB,EFeE,ACfA,ALyCI,AcxDH,ACEA,CX4BN,AR3BO,AImDY,EJnDV,AIqDG,AetDH,CX4BG,ALRS,ACgCF,AMvCV,CQfE,CTeA,ANOY,ACmCpB,AM1CQ,ASbC,CfoDO,CKvCN,CTZE,AIsDT,AevDS,CX4Bf,AR3BgB,AImDG,ActDH,ACEA,CVaA,CAAC,AL0CR,AM3CG,CNwCO,EJpDZ,AIuDK,CAHO,EAIhB,CAJgB,ActDjB,Ed0DI,Ac1DqB,ACEf,CfoDO,EAIV,AexDqB,CfoDX,EAIP,CAJO,CepDjB,CfyDC,CALgB,EAKb,CALa,EAKV,CALU,EAKP;AI5BZ,AR3BE,ASUE,ANQS,ACsCV,AM5CA,AKdF,AGDE,EV8BH,COtFwC,CA0DxC,EfCE,CQ2BG,CAAC,AEfH,CDHS,CDkBP,CAAL,CR3BQ,AkBHD,CAAC,CV8BI,AR3BF,EkBH6B,CV8BxB,CAAC,AEfH,EVZG,AUYD,CVZE,GQ2BL,CAAW,AU9BpB,MV8BH,GEjBY;AFkBZ,AR9BO,ASQK,ANUV,ACkCiB,AMrChB,ASdD,KnBF2B,AGcnB,ACuCR,CADM,CKjD0C,ALiDjD,CIrBK,AEfH,ESdG,GAAG,CX6BG,CEfF,CSdE,CX6BG,AEfH,CACR,EFcc,AW7BF,CX6BG,AW7BF,EAAL,GAAU,EAApB,EAAwB,GX6BX,CAAiB,KAAjB,EAAwB,cAAc,CAAC,OAAvC,CAAf;AACA,AR3BC,ASaC,ANNuC,ACkDxC,AM5CI,AQjBF,ACEA,EX6BH,CLpBc,CHPb,AGOD,CKoBG,CAAC,ACdF,EUfC,EnBEI,AUaF,CSfC,CnBEG,AkBJF,ECEE,EX6BT,AEdW,CFcI,CCdD,ACAD,AQjBA,ACEA,CDFC,ACEA,CVeE,CCAA,ASfP,CTeQ,CQjBV,CCEY,EnBHU,AmBG1B,EX6BH,AU/BuB,CV+BI,QAA3B,AU/BG,EAA+B;AVgClC,AR3BC,ASaE,ANMH,AORI,AKdJ,AGDI,ACED,EhBqBH,AYtBA,EfGC,CGmBE,CAAC,EKQE,ACdH,CTbG,AUUM,AKbL,CACN,AGFG,ClBII,AkBJH,EV+BM,CCdF,ASjBD,EV+BM,ACdH,ANMX,AYrBO,CZqBQ,CevBH,CV+BK,AO7BP,CP6BQ,AO7BjB,GAAa,CADP,EP8BO,AR3BS,AeDtB,CP4BwB,AR3BD,EGmBxB,AevBQ,CTgBQ,ANOY,AevBJ,CfuBxB,AevByB,EfuBM,KAA/B,CevBiC,CAAC,EV+BpB,CAA2B,CU/BH,CAAC,MAAM,CAAC,IAAR,CAAL,CAAT,CAAhB,CAAJ;AVgCH,ARlC4B,ASoB1B,ANMH,ACsCA,AMnDY,AKRT,AGFC,EfuBJ,ACsCA,CJhEQ,CQkCP,ARlCD,AeKG,CZqBA,AYrBC,CZqBA,COnB8C,AKF5C,CNeH,AMfI,CGJJ,CViCI,AJ8BC,CAAC,CI9BA,AJ8BD,EAAU,AW3DjB,CGFS,CfuBV,CAAe,EevBD,CV+BG,CAAC,ICdE,ASjBA,CAAC,CTiBC,ESjBR,ETeE,CNQhB,CAA+B,CAA/B,AevB6B,EfuBK,GKQzB,CAA4B,CAA5B,CADgC,CU9B/B,EfuBV,AevBwC;AVgCvC,AR3BD,ASaG,ANMH,ACsCC,AM3CC,AKjBa,AGDX,ACCF,EnBGF,AGmBA,EKQC,AO9Bc,CZsBZ,AYtBa,CZsBZ,AOLF,CKjBgB,CfGZ,ASaH,AMhBF,CfGM,CIyDA,Ac7DH,ACCE,CX8BE,AU/BH,EV+BK,AJ8BA,Ae5DD,CX+BP,AUhCM,ClBIR,CGmBA,ACsCa,Ae5DA,ChBsBE,CHnBC,AUcF,AQlBF,ETiBG,AL4CE,AM3CD,ASjBC,CAAC,CVgBD,CUhBJ,CnBGS,CAAC,CmBHA,CAAX,GnBGI,AkBJR,ACCoB,CDDH,CfuBzB,ACsCa,Ac7Da,ACCxB,CnBG6B,AGmBA,ACsCD,CDtC9B,AgBtBgC,Cf4DnB,CDtCqB,ACsCjC,GJzDoC,CAAC,EGmBtC,AevBoC,CAAC,GlBIrC,CkBJyC,CAAC,MAAM,CAAC,GAAR,CAAL,CAAX,CAAjB,CAAJ;AViCD,AR5BH,ASSgB,ANUhB,AOLG,AKlBkB,AGAjB,ACCD,EhBsBH,EYvBqB,CZuBlB,AYvBmB,CPgCnB,ALTC,CMzB8C,AME1B,CLkBrB,ASjBA,GAAG,EX+BI,CEdD,ASjBC,CX+BE,CADV,ALRF,AOLW,CPKI,CgBtBD,CAAC,EhBsBf,AgBtBU,ChBsBU,EgBtBA,CAAX,GhBsBT,AgBtByB,ETgBT,AShBb;AXgCA,ACfD,ANMF,ACqCC,AM1CE,AKnBF,AIEE,GJJI,EAGN,CPgCE,ACfD,ECCC,CN0CG,IAAI,CI5BC,AJ4BA,CK3CA,CDeE,CCfA,AL2CC,CAAb,EAAgB,CAAC,GAAG,CAApB,AM1CmB,EN0CI,AM1CF,CN0CG,EAAxB,CM5Ce,CN4Ca;AI5Bd,AR3BT,ASaH,AL2CD,AM1CC,AKnBA,AGAA,IlBKO,AeLP,CAAC,EAAE,CPgCS,ACdZ,ACCA,GN0CI,EW7DN,CPgCoB,AUhCZ,Cd6DE,CI7BY,AR3BjB,ASaK,AL2CC,EK3CC,CDca,AJ6BX,CI7BY,AJ6BzB,AM1Ca,EN0CG,AM1CD,AQnBA,Cd6DE,Ec7DC,Cd6DE,CAApB,EAAuB,Ac7DD,Cd6DE,EAAxB,EAA4B,Kc7DV,CAAe,CAAC,CAAC,MAAjB,EAAyB,CAAzB,CAAjB;AVgCU,ACfA,AL6CV,AM9Ca,AKhBF,AGCX,ACCD,IJFY,CAAC,CIEb,CTDgD,AKDjC,CAAhB,AGCE,CCCE,CAAC,Gf4DE,Ac7DA,CAAC,EAAE,Cd6DC,CAAC,Cc7DC,CAAN,Cd6DQ,Ac7Db,ACCD,Cf4DC,EAAgB,Ac7DA,ACCC,Cf4DA,Ee5DlB,Cf4DqB,CAApB,EAAuB,CAAC,Ac7DA,CAAC,Cd6DzB,Ac7DwB,CAAR,Cd6DY,Ec7DE,KAA9B;AV6BD,ARxBI,AST4C,ALkE9C,AM1CF,AKrBkB,AGEjB,ACCD,InBGQ,AeNU,CP6BV,AChCQ,AMGG,CNHpB,ACwBC,CFaA,AOlCqB,CGEpB,Ed6DC,GAAG,Ac7DC,ClBIF,AIyDE,Ac7DC,Cd6DA,AM1CE,CQnBA,CRmBE,CN0CD,CAAC,Ac7DC,CAAN,CAAL,Cd6Da,CAAT,CAAH,Ac7De,Id6DG,Ic7DK,Cd6DA,Ac7DC,CAAD,CAAR,Ed6DG,CAAU,Ac7DC,Cd6DA,GAAG,CAAC,Ac7DlC,Gd6DqC,CAAlB,IAAuB,CAAC,CAAC,IAAF,CAAO,CAAC,GAAG,CAAC,GAAG,CAAf,CAAzC;AI5BD,ACdF,AL2CG,AM1CD,AKtBF,AGGE,GHNI,EAIN,CPkCE,EEbA,AQnBA,KVgCO,AUhCF,CAAC,CVgCG,CADV,AEZS,AQnBA,ERmBE,CQnBC,CAAN,CAAL,GAAgB,QAAQ,CAAC,CAAD,CAAR,GAAc,KAA9B;AViCA,AR7BJ,AI0DI,AM5CU,AKpBV,AGGA,ACAF,InBGE,AeNA,AIGF,CJHG,CPmCD,AWhCA,CJHG,AIGF,CJHH,GfMF,GQ6BY,EAAE,KWhCZ;AXgCc,ACdf,AL4CE,AMjEgD,AKAzC,AGIP,ACAD,IJJQ,AIIR,CTJiB,AKAR,CLAT,ASIE,CJJS,AIIR,CX+BW,ACdT,AMrBL,KNqBU,CDcU,EAAE,ACdT,IAAI,WUjBjB,CViBa,CAAiB,KAAK,CAAtB,CAAd;ADca,AR3BR,AScL,ACEC,AKxBc,AGKd,ACAA,EViBD,CS9CA,ACaA,CJWe,CAAC,EAAE,EfQH,AkBHR,CTiBC,CAAC,ESjBE,ETiBX,CAAc,GSjBG,ClBGZ,AkBHa,ClBGS,ASc3B,EAAqB,CAArB,ASjBW,GlBGN,EAAoC,AkBHd,QAApB,EAA8B;AV4BnC,ARxBF,AScA,AL2CC,AWlEA,AGMA,ElBGD,CebO,EPgCG,AO3BT,CNsBG,ESjBC,ClBGE,EIyDC,Ac5DA,ClBGE,EkBHC,Cd4DC,Ac5DX,ETiBD,CTdgB,AScA,CTdC,EIyDT,CAAW,CK3CE,CAAC,CL2Cd,CAAP,IK3CD,EAA8B,EAA9B,IAAoC,CTd1B,AScV,ETdA;AQiByC,ARhBzC,AScA,AL2CC,AM1CD,AKxBG,AGMF,ACAD,EAAA,CXmBc,CAAd,AOzBG,CAAC,EAAE,CNuBA,ACCA,AKxBL,EGMM,ACAC,CAAC,ETkBE,CDDC,CUjBZ,CTkBc,ASlBA,CViBC,GAAG,ACCA,CDDC,ETdnB,AkBHoB,CCApB,EDAuB,CCAE,GDAE,ERkBb,CVfJ,AScK,ACCgB,ASlBD,CViBE,ETdnB,EUeuB,AQlBb,CTiBR,ACCD,AQlBsB,CRkBpC,CDDuC,ETdnB,AkBHG,ClBGF,CkBHqB,MAAM,CAAC,GTiBI,CAAC,GTdzC,CAAwB,CkBHd,CAAtB,CTiBc,CAAf;ADeA,AR5BC,AScD,ACCA,AKzBS,AIOR,EX+BD,ACdA,ACCA,EVfC,AeVQ,AIOR,CX+BE,ACdA,AMxBO,CPsCN,ACdA,CMxBQ,AIOR,CJPH,AIOI,ETkBG,CAAC,GSlBR,CTkBD,ASlBY,CX+BZ,ACdA,ACCc,CFaC,ACdA,GTdE,CUejB,CVfmB,AmBHA,CnBIjB,AUcmB,ASlBD,CTkBpB,IDDA,CDcA,ACd2B,CDcC,CAA5B,EAA+B,CW/B9B,EAAgC,EX+BjC,KCdA,AUjBwC,CAAC,YAAxC;AXgCD,AR3BG,ASaH,AL2CA,AM1CA,AK1Be,AGOd,ACCA,EX+BD,AJ6BA,EWpEe,AIQd,CX+BE,AOvCa,CPuCZ,AR3BD,AUcC,CK1Bc,AIQd,CViBE,AUjBD,CDDC,ITkBK,ASlBD,CAAC,ClBKC,CQ2BZ,ACdc,AL2CA,CI7BC,AR3BD,AIwDC,AM1Cf,AQnBc,Cd6DA,AM1CE,AQnBf,ACCA,CViBgB,CAAC,AL2CM,Ac7DP,CAAC,ERmBG,CAAC,AQnBD,ETkBP,CTdZ,AScuB,GCCzB,AQnB2B,CAAC,CVgC5B,AEb8B,CFaC,CAA/B,AEbA,EFakC,CUhCjC,CRmBmC,CAApC,AQnBoC,GTkBtB,ASlByB,CTkBE,GDczC,AUhC2C,MAAM,CAAC,OAAd,EAAuB,CAAC,EAA3D,EAA+D;AViChE,AR3BG,ASaF,AL2CA,AM1CD,AK3BC,AGQC,ACCD,EX+BD,CO7CO,AIWP,CVoBC,AM/BD,CP6CG,CAAC,AR3BD,EUcG,EDDC,ASlBD,Cd6DE,CK3CC,CTbC,CUcE,CVdA,CQ2BZ,CAAe,AEbA,CQnBD,ERmBI,CAAC,CVhBjB,CkBHiB,GTkBI,CAAC,KDcxB,AUhCE,CVgC6B,AEbhB,CFaf,AEbgC,AQnBF,EVgCI,GEbnB,EAAwB,IFavC,ACdS,CAAkC,CAAlC,CADgC,OCEY,CAAC,OAAvC,CAAf;AFcA,AR3BG,ASaF,AL2CC,AM1CF,AK1BA,AGOG,EVgCH,AEbA,AK1BA,ENyBC,CDcE,AEbA,CFaC,AR3BD,AIwDD,AM1CE,CN0CD,Cc7DA,Cd6DE,AWpEE,CfYA,AeXN,CNwBO,CTbC,CSaC,CACR,AL0CQ,EI7BV,AEbA,AKzBO,AGMI,CVgCI,AEbA,AQnBH,Cd6DP,Ac7DQ,ClBKG,AIwDD,AWnEL,CfWO,AIwDZ,AWnEJ,CGMe,CAAJ,CHNE,CXmEM,AWpEb,CXoEc,Ac7DD,Cd6DE,AWlErB,AGKU,Cd6DN,Ac7DF,CRmBH,CAA2B,CN0CD,Ac7DD,EVgCzB,CAA+B,CAA/B,CJ6B+B,CI7BG,CR3BzB,EIwDiB,CJxDW,AIwDD,CAAV,CI7B1B,CEbA,AQnBsC,CAAC,Cd6DE,CAAC,CAAC,CAAtC,EJxDI,CIwDsC,Gc7DtB,CAAyB,Cd6DE,Ec7DC,Ed6DN,CAAU,Ac7DD,Cd6DT,IAAe,CAAC,Ac7DD,Cd6DE,Ac7DD,Cd4DvD,Ac5DiB,EAAyC,YAAzC,CAAtB;AViCH,AR/BE,ASkBC,AL0CD,AM1CF,AKzBG,AGMA,ACCH,EX+BA,EOtCG,CPsCA,ARhCgB,AeNf,CPsCA,ARjCiC,ASoBlC,AL0CD,CAAC,AWnEG,CLyBA,AKzBL,AGME,ACCG,Cf4DD,Ge5DK,CVkBA,ACAC,CN0CD,CK1CE,AUlBsC,CX+BlD,ACdE,ACCY,AQnBH,CVgCI,AUhCH,ACCZ,Cf4DK,Ac7DQ,Cd6DE,AM1CE,CN0CZ,AM1Ca,CFalB,AUhCgB,CVgCI,AUhCR,CVgCZ,CJ6BoB,CI7BG,AJ6BF,Ac7DD,Cd6DE,AM1CR,AQnBH,Cd6DN,AM1CoB,AQnBtB,Gd6DuB,Ac7DD,CVgCzB,IJ6B+B,IAAL,CAAU,CAAV,CM1CZ,CAA2B,AQnBH,CAAC,Cd6DE,CAAC,CAAC,CAAtC,GAA0C,Gc7DtB,CAAyB,Cd6DE,Ec7DC,Ed6DN,CAAU,Ac7DD,Cd6DT,IAAe,CAAC,Ac7DD,Cd6DE,Ac7DD,Cd2DvD,Ac3DiB,EAAyC,YAAzC,CAAtB;AViCH,AR1BC,ASaE,AL0CD,AM1CD,AK1BQ,AGON,ACCH,InBKC,AUaA,AK1BQ,CAAC,CN0BP,AL0CD,Ae5DE,Cf4DD,AWpES,CAAC,AGOV,Cd6DE,CM1CE,EAAE,CSlBE,CVkBA,AL0CD,AWpET,EN0BY,ASnBF,ACC0B,CDDzB,Cd6DP,Ac7DQ,Cd6DE,CAAV,Cc7DW,CAAJ,Ed6DQ,CAAC,Ac7DD,ACCpB,CnBKuB,AIuDD,AM1CC,AQnBZ,Cd6DN,AM1CmB,AQnBrB,ClBMsB,EIuDC,Ac7DD,Kd6DM,IAAL,CAAU,CAAV,Ec7DY,CAAC,Cd6DE,AM1ChC,CN0CiC,AM1CC,CN0CA,AM1ClC,CN0CJ,AM3CoC,GN2CM,Gc7DtB,CAAyB,Cd6DE,Ec7DC,Ed6DN,CAAU,Ac7DD,Ed6DT,IAAgB,Ac7DD,Cd6DE,Ac7DD,Cd6DE,Ac7DxC,EAAyC,YAAzC,CAAtB;AlBOD,ASYa,ALuCP,AMtCP,AK3BoB,AGQlB,IRmBF,AK3BoB,CXiEpB,AWjEqB,CfcpB,CedsB,CN0BT,GCCP,EAAE,CDDW,ACEnB,EDFqB,GAAG,CTZV,ASYW,ETZT,GADO;AAEvB,ASWW,AL4CZ,AMzCE,AK7BF,AISD,EAAA,CJXO,EAGN,CfcC,AUcC,ISpBK,CAAC,EToBC,EAAE,ASpBZ,CTmBE,ASnBY,EnBMA,EAAE,KmBNhB,EnBIyB,CmBJC,MAAO,EAAP,IAAa;AnBOrC,ASQA,ACMC,AK7BA,AGQD,ACCD,IJTE,AISF,CVaS,AMtBN,CfeF,AUcC,CDFD,AM3BI,CAAL,AISI,CAAC,CDDA,CCCE,CAAC,EToBE,CQrBA,CRqBE,ASpBR,CAAJ,GDDe,ACCC,EnBMC,EAAE,AmBNnB,CnBGwB,IkBJvB,EAAyB;AlBQzB,ASYC,AL2CH,AM1Ce,AK7BN,AGSN,Ed8DH,EWvES,CAAC,CfgBR,ASYC,CM5BS,CL6BG,AQpBZ,Ed8DK,GK3CE,AL2CF,AWvEP,AGSO,CRoBa,AQpBZ,CTmBG,ASnBF,CTkBR,ACEqB,EQpBV,CRoBa,AQpBjB,ClBOO,AUaW,EVbT,AkBPD,CAAT,CAAL,GAAmB,ElBGG,WkBHU,CAAC,QAAd,CAAuB,GAAG,GAAG,YAAN,GAAqB,CAA5C,IAAiD,KAApE;AlBQD,ASYC,AL2CF,AM3CY,AK7BO,AGUjB,ACAF,IJVmB,CAAC,CfiBnB,ASYC,CM7BoB,CGUpB,ElBOG,CIuDE,CJvDA,AmBPC,CDAD,CTmBG,ASnBF,ACAE,CDAD,ACAE,CVmBC,CTZA,CAAC,AkBPD,CAAJ,ACAR,GDAgB,CAAT,CAAL,GAAmB,ClBOd,YkBP2B,CAAC,QAAd,CAAuB,GAAG,GAAG,YAAN,GAAqB,CAA5C,IAAiD,KAApE;AlBEsB,ASiBV,AL4Cb,AM9CA,AK3BD,AGWE,ACAF,GJdM,EL6BG,AKzBT,CXwEC,CAAC,AM1CD,CDFa,ASlBZ,Cd8DE,Ee9DC,EDAE,CTkBa,AL4CX,Ac9DD,CAAC,CTkBa,CUlBtB,Cf8DI,Ac9DQ,Cd8DE,Ac9DN,Cd8DJ,CADG,Cc7DS,CAAT,CAAL,GAAmB,aAAa,CAAC,QAAd,CAAuB,GAAG,GAAG,YAAN,GAAqB,CAA5C,IAAiD,KAApE;AlBPkC,ASyBxB,AL6CX,AM1CC,AK/BA,AGWA,ACAD,GnBRW,CAAb,AeHG,CAAC,CXyEF,AM1CC,CN0CA,AWzEG,CAAL,AIWC,Cf8DG,IM1CK,CN0CA,CM1CE,CADV,ASnBQ,CACP,Cf6DE,CAAU,CAAV,CAFG,8Be5DE,EAEP,gCAFO,EAGP,6CAHO,EAIP,mBAJO,EAKP,sBALO,EAMP,oDANO,EAOP,6BAPO,EAQP,uBARO,EASP,0BATO,EAUP,iDAVO,EAWP,uDAXO,EAYP,yCAZO,EAaP,wBAbO,CAAR;AnBQF,ASOE,ALgDA,AM1CC,AKhCM,AGYP,ACcA,IJ1BO,CNqBC,AMrBA,CX0ER,AM1CC,CDFD,AL4CC,AW1ES,CAAX,CX0EI,KAAK,AM1CC,EAAE,EN0CR,CAAU,EAAV,IJvDL,YAAY,GAAG,MAAM,CAAC,MAAP,EAAf;AACA,ASWG,ALwCK,AMvCO,AKhCA,AGad,GAfM,CHEQ,CXuEd,AWvEe,CN+Bb,CM/Be,CLgCH,CQnBR,ITkBG,ASlBC,CRmBU,CDDT,CADV,ACEqB,GQnBN,CAAC,IAAP,KAAgB,mBAApB,EAAyC;ATmB7C,AL4CF,AM5CY,AKhCZ,AGcA,ACaA,GJ/BM,EAKN,CN+BE,ISlBI,CCaD,GVKK,CSlBC,CTkBC,ESlBE,CCad,GDbkB,WAAJ,CAAgB,IAAI,CAAC,KAAL,CAAW,MAAM,CAAC,SAAlB,EAA6B,MAAM,CAAC,SAAP,GAAmB,CAAhD,CAAhB,CAAd;AlBQI,ASUU,ACFb,AK7BC,AGcF,ACaC,IJ3BC,CLwBO,AKxBN,ELiCF,AKjCI,CN+BS,AM/Bd,CfqBc,CkBPR,ECaD,EVIe,AUJb,CAAC,CVIc,KTVlB,CmBMH,EnBNyB,AkBPN,ACaH,GDbM,KAAK,CAAC,CAAD,CAA5B;AlBQD,ASSa,AL8CK,AM3Cf,AKlCM,AGeR,ACaE,EnBNH,EetBS,CAAC,CLkCP,CKlCS,CAAX,CX6EM,Cc9DA,ElBOG,CAAC,AUYD,EAAE,CADV,ASLO,InBNT,AIuDkB,CAAC,CejDJ,GfiDG,AejDA,CDbK,Cd8DU,Ec9DP,Id8DR,Cc9Da,Cd8DkB,Ac9DjB,CAAD,CAA9B,CCa8B,CfiDb,AejDc,EfiD+B,GAA7C,EAAwD,eejD3C,CAA5B;AnBLH,ASME,ALiDD,AM3CE,AKnCY,AGgBd,ElBOD,EevBe,CNoBL,AMpBM,CLmCb,CDFD,AMjCgB,CfuBZ,CAAC,CIuDA,Ac9DA,Ed8DE,EJvDT,AUYW,CVZE,AIuDD,CAAC,AM3CA,GN2CG,EJvDhB,CAAoB,AIuDD,Ac9DA,ClBOE,EkBPC,Cd8DV,IJvDgB,CAAC,AIuDD,IAAI,Ac9DA,CAAC,ClBOZ,CIuDc,CJvDf,AkBPE,ClBOtB,AkBNE,Cd6DU,CAAX,Ec7DK,UAAJ,CAAe,IAAf,EAAqB,MAAM,CAAC,SAAP,GAAmB,CAAxC,EAA2C,cAA3C,CADoB,EAEpB,gBAFoB,CAArB;AlBQD,ASUG,AL6CF,AM5Cc,AKnCd,AGoBA,ACSE,GJlCI,CAAP,ENuCG,ECCY,EN4CR,Ac3DA,Ed2DE,CK7CC,CCCW,ASNd,CVKK,AL6CC,CK9CX,ACEqB,GN4CN,CelDJ,EfkDA,Cc3DO,CCSH,CfkDM,Cc3DA,Gd2DX,Cc3De,Gd2DK,AelD7B,EAAyB,EfkDQ,Cc3Db,CAAa,Cd2DG,GAA3B,CAAX,Oc3D+C,CAAC,MAA1B,CAAtB;ATeE,AL8CF,AM9CY,AKjCb,AI4BI,EJ5BJ,INiCG,GMjCI,CX+EA,AW9EN,CX8EO,CenDJ,EVKO,AL8CA,EK9CE,AMhCN,EX8EQ,CW9EL,CAAT,CI2BY,CfmDM,CAAC,AW9EN,CADP,AI4BS,EfmDD,AW7Ed,CX6EuB,GenDpB,CfmDwB,GAAG,CAAhB,CAAd;AJvDI,ASSU,AL+Cd,AMjDC,AK7BC,AGiBF,ACUG,IJ3BD,CLoBO,AKpBN,ELiCF,AKjCI,CN+BS,AM/Bd,CfsBc,AkBLT,Cd6DC,CAAC,CenDJ,CDVM,CTcW,AL+CV,Ac7DA,ETcY,AUJf,CDVM,Cd6DC,Ac7Dd,CCUU,CDVM,ClBKZ,AkBLa,ClBKU,EkBLP,CCUjB,CnBLC,EAAyD,EIwDnD,Ac7DgB,Cd6DC,Ac7DA,ElBKvB,EAAgF,EkBLpF,EAAmC,CAAC,EAApC,EAAwC;AlBMzC,ASQa,ALgDX,AM7CC,AKlCM,AGkBP,ACUE,IJ5BK,CAAC,CLkCP,CKlCS,CfuBN,AevBL,EGkBK,CCOH,ETSO,CVXE,CUWA,CADV,CVVa,AmBKL,CDVI,KlBKO,AkBLF,ClBKG,QkBLpB,EAA4B,ElBKf,CAAoB;AAClC,ASKC,ALmDA,AM7CC,AKnCY,AGmBZ,ACUC,InBLH,AIwDC,AWhFa,CNgBL,ALgEP,AWhFa,CLmCb,CDFD,AMjCgB,CfwBb,AIwDC,AWhFa,AGmBhB,ElBKI,IAAI,AIsDiB,AM3CjB,CVXC,CIwDE,AM7CD,AQhBF,Cd2DiB,Ac3DhB,CAAC,Cd6DI,CAFW,Cc3DZ,Cd6DI,Ac7DR,Cd2DgB,EJvDO,AI0DjC,Ac9DkB,Cd2DQ,Ac3DjB,CAAR,Cd8DE,CAHuB,Cc3DH,Cd8DjB,CAHoB,EAGjB,CAHiB,EAI1B,CAJ0B,EAIvB,CAJuB,EAIpB,Ac/D8B,CAAC,Cd2DX,EAIhB,EAJgB,EAK1B,CAL0B,EAKvB,AchEoB,Cd2DG,Ac3DsB,EdgE1C,CAAC,CALmB,EAKhB,AchE4C,CAAC,CAAP,GAAW,CAAC,GAAG,CAAxC,EAA2C,YAA3C,CAAtB;AlBMF,ASSE,ALkDD,AMjDa,AKnCd,AGoBE,ACUC,GJhCG,Cf2BN,CexBA,CNiCE,ECCY,AQfZ,ClBKG,EAAE,ESSE,CCCW,CDDT,CADV,ACEqB,AQfZ,CAAC,CAAC,GAAG,CAAJ,GlBKU,AkBLF,ClBKG,AkBLZ,CAAR,GAAsB,IlBKjB,GAA0B,MkBLI,CAAC,OlBKS,CAAC,EkBLxB,CAAyB,KlBK1C,CkBLgD,CAAC,ClBKG,AkBLV,GAAW,CAAC,ClBG3B,EkBH8B,CAAxC,EAA2C,YAA3C,CAAtB;AlBMF,ASSE,AL2CyB,AM3Cf,AKlCV,AGoBA,ACUA,InBLF,AezBE,CX6EQ,AW7EP,CNkCD,AL2CF,CW7EK,CAAL,AGoBE,MTcQ,EAAE,ASdF,CAAC,CAAC,ElBKI,CkBLD,ClBKG,AkBLP,GAAQ,CAAT,CAAR,GAAsB,aAAa,CAAC,UAAd,CAAyB,MAAM,CAAC,CAAP,GAAW,CAAC,GAAG,CAAxC,EAA2C,YAA3C,CAAtB;AlBEgC,ASYpB,ALmDd,AMrDC,AKhCO,AGqBN,GlBCY,CAAf,AetBS,CLmBC,AKnBA,ELoCR,AKpCU,CNkCG,AMlCd,GXqFO,GKnDa,CLmDT,CKnDW,KLmDf,CAAW,CAAX,CAAP;AJ1DD,ASOa,ALoDZ,AMjDE,AKrCY,AI+Bb,IJ/Ba,CAAC,Cf2BZ,AUUD,CKrCe,CI+BhB,KTMQ,ASNH,CAAC,CTMI,CVVZ,AUSE,CVTa,ImBIb,EnBJmB,CAAC,cAAP,EAAf,EAAwC,GAAxC,CAA4C,IAAI,UAAJ,CAAe,IAAI,CAAC,MAApB,CAA5C;AACA,ASIE,ACMC,AKtCF,AGsBC,ACUA,EnBJF,Ce/BO,ENkBG,AMdT,CLqCE,EVVG,AmBIJ,CnBJK,CkBND,IlBMN,AUUW,ASNH,CDVG,ACUF,CTMI,IQhBG,ECUd,ODVA,EAAyB;AlBO3B,AShByC,AL3FvB,AMoHH,AKrCZ,AGsBA,GTVW,CAAd,AMZG,CAAC,EAAE,CLqCS,AKrCd,AGsBE,ClBMI,IkBNC,CRea,AQfZ,ClBMT,AkBNU,CRea,EQfV,CAAJ,GAAQ,CAAT,CAAL,GAAmB,aAAa,CAAC,QAAd,CAAuB,YAAY,GAAG,CAAC,GAAG,CAAnB,GAAuB,CAA9C,IAAmD,KAAtE;AlBOH,ASQA,ACAa,AKrCJ,AGuBN,ACSD,EVKF,EMrCS,CNqCN,AMrCO,CNqCN,CMrCQ,CAAX,AGuBE,KAAK,CAAC,CAAC,CTcV,AULU,CVKK,CSdF,CAAJ,CCSP,EDTe,CAAT,CAAL,GAAmB,ETctB,CAA4B,CAA5B,EAA+B,KAA/B,ESdmC,CAAC,QAAd,CAAuB,YAAY,GAAG,CAAC,GAAG,CAAnB,GAAuB,CAA9C,IAAmD,KAAtE;ATeH,ACHE,AKnCa,AGwBZ,ACSD,EVKF,EMtCe,CNsCZ,ACpBO,AKlBM,CNsCZ,CMtCc,CGwBf,KAAK,CAAC,CAAC,ACSH,CVKP,CAAe,CSdF,CAAJ,ETcT,CAAoB,ASdH,CAAT,ACSN,CDTC,GAAmB,CTcI,GAAG,CAAT,GAAa,CAAjC,ISdmC,CAAC,QAAd,CAAuB,YAAY,GAAG,CAAC,GAAG,CAAnB,GAAuB,CAA9C,IAAmD,KAAtE;AlBOE,ASQL,ACvByC,AKhBxC,AGyBE,ACSA,GTlBW,AKpBP,CLoBP,CKfC,If8Bc,GmBGZ,MAAM,GAAG,KnBHP,CAA4B,GmBG9B,GnBHE,EAA4C,KAA5C,EAAmE;AACxE,AUSA,AKxCG,AGyBD,ACSC,ETMH,EKxCG,CLwCA,AKxCC,CLwCA,CKxCE,Cf+BA,Ae/BL,IIkCE,EnBHS,EUSZ,CVTe,AUSA,ASNP,GAAG,GnBHU,CAAC,KUStB,CAA4B,CAA5B,EAA+B,GVThB,CAAoB,CUSnC,ISNsB,MAAX,CAAR;AnBFF,AUSD,AKzCS,AG0BR,ACSE,ETMH,EVTC,AehCQ,CLyCN,AKzCO,CLyCN,CKzCQ,CfgCP,AehCJ,EfgCM,EmBGJ,InBJgC,AUUnC,ASNO,CTMQ,ESNL,ETMV,CAAoB,GSNjB,GTMuB,GAAG,CAAT,GAAa,CAAjC;AVRC,AUSD,AK1Ce,AIoCZ,InBHF,AejCc,CAAC,EAAE,EfiCZ,EAAE,KAF2B;AAGlC,AelCA,AG2BD,GHhCO,CfuCN,AevCD,EGgCI,QAAQ,IAAI,ElBOC,EAAE,KkBPnB,EAA2B;AlBIQ,Ae7BnC,AG0BC,ACSC,GnBNa,CAAf,Ke7BO,EG0BC,ICSD,KDTN,CCSC;AnBDF,AejCC,AG0BA,ACQc,IJlCd,KfiCM,CejCA,EAAE,CAAC,EfiCV,IejCgB,GAAG,CAAT,GAAa,CAAd,IAAmB,CADrB;AfmCP,AejCC,AIkCE,IJlCF,SAAS,EAAE,GAAG,CAAC,CIkCP,QAAQ,GJlCL,AIkCQ,CJlCS,KIkCH,IJlCd,CIkCmB,CJlCS,AIkCR,cJlCsB,CAAC,MAAf,GAAwB,KIkCjC,CAA5B,QJlC2E,CAAC,OAAnE,CAFL;AAGN,AGyBD,ACSG,IJlCF,KGyBM,CHzBA,AG0BN,EH1BQ,CG0BL,CAAC,CH1BO,CAAC,IIkCJ,MDRR,CAAiB,ACQF,CJlCP,CAAiB,CIkCP,KJlCV,AG0BR,CCQwB,CJlCS,AG0BN,ACQF,MAAM,QJlCgB,AG0BN,ACQF,CJlCS,AG0BN,ACQF,IAAT,EJlCE,AG0BN,ACQH,EAAwB,CJlCS,AG0BN,UCQ3B,EAAtB,EJlCqE,AG0BN,CH1BO,AG0BN,OH1B1D,AG0BR,CADM,EAEN,MAAM,CAAC,MAFD,CAAP;AlBQM,AepCC,AGgCP,ACMG,GJtCH,YfoCqB,KmBEZ,KnBFH,CAA0B,AmBEjB,GAAG,GnBFZ,EAA6C,IAA7C,EAAyD,SmBEnC,OAAV,CAAf;AnBDH,AehCA,QfgCM,IAAI,GAAG,iBAAiB,CAAC,IAAD,EAAO,cAAc,CAAC,QAAf,GAA0B,cAAc,CAAC,QAAhD,CAA9B,CAD+D,CAE/D;AkBaD,ACZI,SDYK,SCZD,EDYR,CAAqB,GCZP,IAAI,GDYlB,EAAgD,ICZ5C,EAAyB;AnBA5B,AkBaA,ACZI,MDYA,ElBbE,QkBaQ,CCZT,EnBDY,AkBaA,EAAjB,ClBboB,AmBChB,EAAQ,InBDc,CAAC,CmBCvB,IAAkB,MAAlB,SnBDgB,EAApB;AACA,AkBaA,ACZI,EnBDJ,MkBaM,KlBbK,CAAC,CmBDT,EDcY,GAAG,CCZR,GDYY,QlBbtB,CACC,CkBYiB,CAAe,UAAf,CAAlB;AlBZQ,AkBaR,ACZI,MDYA,CAAC,GAAG,CAAR,KCZI,KAAK,CAAC,WAAD,CAAL;AnBFJ,AkBeA,ACZI,InBDH,IkBaK,GAAG,GAAG,SAAS,CAAC,MAAtB;AlBbG;AAFH,AkBgBA,ACZG,InBDF,KkBaM,CAAC,GAAG,CCZR,EDYI,ECZA,EDYW,CCZR,OAAP,EDYyB,CAAC,MAAX,CAAkB,sBAAlB,MAA8C,CAAC,CAAjE,EAAoE;AlBb9D,AkBcL,ACZE,IDYF,UAAU,IAAI,MAAM,CAAC,YAAP,CAAoB,SAAS,CAAC,CAAC,EAAF,CAA7B,CAAd;AlBjBD,AkBkBC,ACZE,InBFF;AAAE;AAJH,AkBmBA,ACZE,InBFD,IkBcK,OAAO,ACZN,GDYS,ICZd,MDYwB,CAAC,MAAX,CAAkB,sBAAlB,CAAhB;AlBdM,AkBeN,ACbgB,QDaV,OAAO,GAAG,uBAAuB,IAAvB,CAA4B,UAAU,CAAC,MAAX,CAAkB,OAAO,GAAG,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","file":"main.c39d6dcf.js","sourceRoot":"..\\src","sourcesContent":["import { Camera } from './camera'\n\nexport let adapter: GPUAdapter\nexport let device: GPUDevice\n\nexport const clearColor = { r: 0.0, g: 0.1, b: 0.2, a: 1.0 }\nexport let format: GPUTextureFormat\nexport let sampler: GPUSampler\n\nexport let canvas: HTMLCanvasElement\nexport let context: GPUCanvasContext\n\nexport let global: {\n\taspect: number\n}\n\nexport let depth: GPUTexture\n\nexport async function Setup(width: number, height: number): Promise<HTMLCanvasElement | undefined> {\n\tif (window.navigator.gpu == undefined) {\n\t\treturn undefined\n\t}\n\tadapter = (await window.navigator.gpu.requestAdapter({\n\t\tpowerPreference: 'high-performance',\n\t})) as GPUAdapter\n\tdevice = (await adapter.requestDevice()) as GPUDevice\n\tdevice.lost.then((info) => {\n\t\tconsole.log(info)\n\t})\n\n\tcanvas = document.createElement('canvas')\n\tcontext = canvas.getContext('webgpu') as GPUCanvasContext\n\n\tformat = context.getPreferredFormat(adapter)\n\n\tglobal = {\n\t\taspect: undefined as any,\n\t}\n\n\tsampler = device.createSampler({\n\t\tmagFilter: 'linear',\n\t\tminFilter: 'linear',\n\t})\n\n\tResize(width, height)\n\n\treturn canvas\n}\n\nexport function Resize(width: number, height: number): void {\n\tcontext.configure({\n\t\tdevice: device,\n\t\tformat: format,\n\t\tsize: { width: width, height: height },\n\t})\n\tcanvas.width = width\n\tcanvas.height = height\n\n\tdepth = device.createTexture({\n\t\tsize: {\n\t\t\twidth: canvas.width,\n\t\t\theight: canvas.height,\n\t\t},\n\t\tformat: 'depth32float',\n\t\tusage: GPUTextureUsage.RENDER_ATTACHMENT,\n\t})\n\tglobal.aspect = canvas.width / canvas.height\n}\n\nexport let cameraBuffer: GPUBuffer\nexport let renderPass: GPURenderPassEncoder\nlet encoder: GPUCommandEncoder\n\nexport function StartRender(camera: Camera): void {\n\tencoder = device.createCommandEncoder()\n\trenderPass = encoder.beginRenderPass({\n\t\tcolorAttachments: [\n\t\t\t{\n\t\t\t\tloadValue: clearColor,\n\t\t\t\tstoreOp: 'store',\n\t\t\t\tview: context.getCurrentTexture().createView(),\n\t\t\t},\n\t\t],\n\t\tdepthStencilAttachment: {\n\t\t\tdepthLoadValue: 1.0,\n\t\t\tdepthStoreOp: 'store',\n\t\t\tstencilLoadValue: 0,\n\t\t\tstencilStoreOp: 'store',\n\t\t\tview: depth.createView(),\n\t\t},\n\t})\n\tcameraBuffer = camera.Buffer()\n}\n\nexport function FinishRender(): void {\n\trenderPass.endPass()\n\tdevice.queue.submit([encoder.finish()])\n}\n\nexport function CreateBuffer(data: Float32Array | Uint32Array, usage: GPUFlagsConstant): GPUBuffer {\n\tconst buffer = device.createBuffer({\n\t\tsize: data.byteLength,\n\t\tusage: GPUBufferUsage.COPY_DST | GPUBufferUsage.COPY_SRC | usage,\n\t\tmappedAtCreation: true,\n\t})\n\tnew Uint8Array(buffer.getMappedRange()).set(new Uint8Array(data.buffer))\n\tbuffer.unmap()\n\treturn buffer\n}\n\nexport function CreateEmptyBuffer(length: number, usage: GPUFlagsConstant): GPUBuffer {\n\tconst buffer = device.createBuffer({\n\t\tsize: length,\n\t\tusage: usage,\n\t\tmappedAtCreation: false,\n\t})\n\treturn buffer\n}\nexport async function ReadBuffer(buffer: GPUBuffer, size: number): Promise<ArrayBuffer> {\n\tconst temp = CreateEmptyBuffer(size, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST)\n\t// Encode commands for copying buffer to buffer.\n\tconst copyEncoder = device.createCommandEncoder()\n\tcopyEncoder.copyBufferToBuffer(\n\t\tbuffer /* source buffer */,\n\t\t0 /* source offset */,\n\t\ttemp /* destination buffer */,\n\t\t0 /* destination offset */,\n\t\tsize /* size */,\n\t)\n\tconst copyCommands = copyEncoder.finish()\n\tdevice.queue.submit([copyCommands])\n\tawait temp.mapAsync(GPUMapMode.READ)\n\tconst copyArrayBuffer = temp.getMappedRange()\n\treturn copyArrayBuffer\n}\n","import * as GPU from './gpu'\n\nexport function New(src: string): GPUShaderModule {\n\tconst module = GPU.device.createShaderModule({\n\t\tcode: src,\n\t})\n\treturn module\n}\n","export async function GetUserFile(endings: string[]): Promise<File> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst input = document.createElement('input')\n\t\tinput.type = 'file'\n\t\tinput.accept = ''\n\t\tfor (let i = 0; i < endings.length; i++) {\n\t\t\tinput.accept += '.' + endings[i]\n\t\t\tif (i < endings.length - 1) {\n\t\t\t\tinput.accept += ','\n\t\t\t}\n\t\t}\n\t\tinput.onchange = async () => {\n\t\t\tconst files = input.files\n\t\t\tif (files == null || files.length == 0) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst file = files[0]\n\t\t\tconst sep = file.name.split('.')\n\t\t\tconst format = sep[sep.length - 1]\n\t\t\tif (endings.includes(format)) {\n\t\t\t\tresolve(file)\n\t\t\t} else {\n\t\t\t\treject('format \"' + format + '\" not supported')\n\t\t\t}\n\t\t}\n\t\tinput.click()\n\t})\n}\n\nexport async function GetServerFile(path: string): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = new XMLHttpRequest()\n\t\trequest.onreadystatechange = () => {\n\t\t\tif (request.readyState == 4 && request.status == 200) {\n\t\t\t\tresolve(request.responseText)\n\t\t\t}\n\t\t}\n\t\trequest.open('GET', path)\n\t\trequest.send()\n\t\tsetTimeout(reject, 1000, 'file timeout')\n\t})\n}\n","import * as GPU from './gpu'\nimport * as Module from './module'\nimport { GetServerFile } from '../helper/file'\nimport { Position } from './position'\n\nlet pipeline: GPURenderPipeline | undefined = undefined\n\nexport async function Render(\n\tposition: Position,\n\tlength: number,\n\tpositions: GPUBuffer,\n\tcolors: GPUBuffer,\n): Promise<void> {\n\tif (pipeline == undefined) {\n\t\tconst src = await GetServerFile('render/lines.wgsl')\n\t\tconst module = Module.New(src)\n\n\t\tpipeline = GPU.device.createRenderPipeline({\n\t\t\tvertex: {\n\t\t\t\tmodule: module,\n\t\t\t\tentryPoint: 'vertexMain',\n\t\t\t\tbuffers: [\n\t\t\t\t\t{\n\t\t\t\t\t\tattributes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tshaderLocation: 0,\n\t\t\t\t\t\t\t\toffset: 0 * 4,\n\t\t\t\t\t\t\t\tformat: 'float32x3',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tarrayStride: 4 * 4,\n\t\t\t\t\t\tstepMode: 'vertex',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tattributes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tshaderLocation: 1,\n\t\t\t\t\t\t\t\toffset: 0 * 4,\n\t\t\t\t\t\t\t\tformat: 'float32x3',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tarrayStride: 4 * 4,\n\t\t\t\t\t\tstepMode: 'vertex',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tfragment: {\n\t\t\t\tmodule: module,\n\t\t\t\tentryPoint: 'fragmentMain',\n\t\t\t\ttargets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tformat: GPU.format,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tdepthStencil: {\n\t\t\t\tformat: 'depth32float',\n\t\t\t\tdepthWriteEnabled: true,\n\t\t\t\tdepthCompare: 'less',\n\t\t\t},\n\t\t\tprimitive: {\n\t\t\t\ttopology: 'line-list',\n\t\t\t},\n\t\t})\n\t}\n\n\tconst array = new Float32Array(16)\n\tposition.Save(array, 0)\n\tconst buffer = GPU.CreateBuffer(array, GPUBufferUsage.UNIFORM)\n\tGPU.renderPass.setPipeline(pipeline)\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: pipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: GPU.cameraBuffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t],\n\t})\n\tGPU.renderPass.setBindGroup(0, group)\n\tGPU.renderPass.setVertexBuffer(0, positions)\n\tGPU.renderPass.setVertexBuffer(1, colors)\n\tGPU.renderPass.draw(length)\n}\n","export class Matrix {\n\tprivate data: Float32Array\n\n\tprivate constructor(data: Float32Array) {\n\t\tthis.data = data\n\t}\n\n\tstatic Identity(): Matrix {\n\t\treturn new Matrix(\n\t\t\tnew Float32Array([\n\t\t\t\t/*eslint-disable*/\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t/*eslint-enable*/\n\t\t\t]),\n\t\t)\n\t}\n\n\tSave(location: Float32Array, offset: number): void {\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tlocation[offset + i * 4 + j] = this.data[i + j * 4]\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic Translate(x: number, y: number, z: number): Matrix {\n\t\treturn new Matrix(\n\t\t\tnew Float32Array([\n\t\t\t\t/*eslint-disable*/\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t\t/*eslint-enable*/\n\t\t\t]),\n\t\t)\n\t}\n\n\tstatic RotateX(rad: number): Matrix {\n\t\treturn new Matrix(\n\t\t\tnew Float32Array([\n\t\t\t\t/*eslint-disable*/\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(rad), -Math.sin(rad), 0,\n\t\t\t\t0, Math.sin(rad), Math.cos(rad), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t/*eslint-enable*/\n\t\t\t]),\n\t\t)\n\t}\n\n\tstatic Rotate(rad: number, axis: Vector): Matrix {\n\t\tconst sin = Math.sin(rad)\n\t\tconst cos = Math.cos(rad)\n\t\tconst cosN = 1 - cos\n\t\t//https://en.wikipedia.org/wiki/Rotation_matrix#Rotation_matrix_from_axis_and_angle\n\t\treturn new Matrix(\n\t\t\tnew Float32Array([\n\t\t\t\t/*eslint-disable*/\n\t\t\t\taxis.x*axis.x*cosN + cos,\n\t\t\t\taxis.x*axis.y*cosN - axis.z*sin,\n\t\t\t\taxis.x*axis.z*cosN + axis.y*sin,\n\t\t\t\t0,\n\n\t\t\t\taxis.y*axis.x*cosN + axis.z*sin,\n\t\t\t\taxis.y*axis.y*cosN + cos,\n\t\t\t\taxis.y*axis.z*cosN - axis.x*sin,\n\t\t\t\t0,\n\n\t\t\t\taxis.z*axis.x*cosN - axis.y*sin,\n\t\t\t\taxis.z*axis.y*cosN + axis.x*sin,\n\t\t\t\taxis.z*axis.z*cosN + cos,\n\t\t\t\t0,\n\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t/*eslint-enable*/\n\t\t\t]),\n\t\t)\n\t}\n\n\tstatic RotateY(rad: number): Matrix {\n\t\treturn new Matrix(\n\t\t\tnew Float32Array([\n\t\t\t\t/*eslint-disable*/\n\t\t\t\tMath.cos(rad), 0, Math.sin(rad), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t-Math.sin(rad), 0, Math.cos(rad), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t/*eslint-enable*/\n\t\t\t]),\n\t\t)\n\t}\n\n\tstatic RotateZ(rad: number): Matrix {\n\t\treturn new Matrix(\n\t\t\tnew Float32Array([\n\t\t\t\t/*eslint-disable*/\n\t\t\t\tMath.cos(rad), -Math.sin(rad), 0, 0,\n\t\t\t\tMath.sin(rad), Math.cos(rad), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t/*eslint-enable*/\n\t\t\t]),\n\t\t)\n\t}\n\n\tstatic Scale(x: number, y: number, z: number): Matrix {\n\t\treturn new Matrix(\n\t\t\tnew Float32Array([\n\t\t\t\t/*eslint-disable*/\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t/*eslint-enable*/\n\t\t\t]),\n\t\t)\n\t}\n\n\tMultiply(m: Matrix): Matrix {\n\t\tconst res = new Float32Array(16)\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tfor (let c = 0; c < 4; c++) {\n\t\t\t\t\tres[i + j * 4] += this.data[c + j * 4] * m.data[i + c * 4]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(res)\n\t}\n\n\tMultiplyVector(v: Vector): Vector {\n\t\treturn {\n\t\t\tx: this.data[0] * v.x + this.data[1] * v.y + this.data[2] * v.z,\n\t\t\ty: this.data[4] * v.x + this.data[5] * v.y + this.data[6] * v.z,\n\t\t\tz: this.data[8] * v.x + this.data[9] * v.y + this.data[10] * v.z,\n\t\t}\n\t}\n\n\tPosition(): Vector {\n\t\treturn {\n\t\t\tx: this.data[3],\n\t\t\ty: this.data[7],\n\t\t\tz: this.data[11],\n\t\t}\n\t}\n\n\tstatic Perspective(fovy: number, aspect: number, near: number, far: number): Matrix {\n\t\tconst c2 = (far + near) / (near - far)\n\t\tconst c1 = (2 * far * near) / (near - far)\n\n\t\tconst s = 1 / Math.tan(fovy / 2)\n\t\tconst m = new Float32Array([\n\t\t\t/*eslint-disable*/\n\t\t\ts / aspect, 0, 0, 0,\n\t\t\t0, s, 0, 0,\n\t\t\t0, 0, c2, c1,\n\t\t\t0, 0, -1, 0,\n\t\t\t/*eslint-enable*/\n\t\t])\n\t\treturn new Matrix(m)\n\t}\n}\n\nexport interface Vector {\n\tx: number\n\ty: number\n\tz: number\n}\n","import { Matrix } from './math'\n\nexport class Position {\n\tmodel: Matrix\n\n\tconstructor() {\n\t\tthis.model = Matrix.Identity()\n\t}\n\tSave(location: Float32Array, offset: number): void {\n\t\tthis.model.Save(location, offset)\n\t}\n\n\tTranslate(x: number, y: number, z: number): void {\n\t\tthis.model = Matrix.Translate(x, y, z).Multiply(this.model)\n\t}\n\n\tRotateX(rad: number): void {\n\t\tthis.model = Matrix.RotateX(rad).Multiply(this.model)\n\t}\n\tRotateXLocal(rad: number): void {\n\t\tconst p = this.model.Position()\n\t\tthis.model = Matrix.Translate(p.x, p.y, p.z)\n\t\t\t.Multiply(Matrix.RotateX(rad))\n\t\t\t.Multiply(Matrix.Translate(-p.x, -p.y, -p.z))\n\t\t\t.Multiply(this.model)\n\t}\n\n\tRotateY(rad: number): void {\n\t\tthis.model = Matrix.RotateY(rad).Multiply(this.model)\n\t}\n\tRotateYLocal(rad: number): void {\n\t\tconst p = this.model.Position()\n\t\tthis.model = Matrix.Translate(p.x, p.y, p.z)\n\t\t\t.Multiply(Matrix.RotateY(rad))\n\t\t\t.Multiply(Matrix.Translate(-p.x, -p.y, -p.z))\n\t\t\t.Multiply(this.model)\n\t}\n\n\tRotateZ(rad: number): void {\n\t\tthis.model = Matrix.RotateZ(rad).Multiply(this.model)\n\t}\n\tRotateZLocal(rad: number): void {\n\t\tconst p = this.model.Position()\n\t\tthis.model = Matrix.Translate(p.x, p.y, p.z)\n\t\t\t.Multiply(Matrix.RotateZ(rad))\n\t\t\t.Multiply(Matrix.Translate(-p.x, -p.y, -p.z))\n\t\t\t.Multiply(this.model)\n\t}\n\n\tScale(x: number, y: number, z: number): void {\n\t\tthis.model = Matrix.Scale(x, y, z).Multiply(this.model)\n\t}\n}\n","import { Matrix } from './math'\nimport * as GPU from './gpu'\n\nexport class Camera {\n\tprivate projection: Matrix\n\tprivate view: Matrix\n\tprivate fov: number\n\n\tconstructor(fieldOfView: number) {\n\t\tthis.projection = Matrix.Perspective(fieldOfView, GPU.global.aspect, 0.1, 1000)\n\t\tthis.view = Matrix.Identity()\n\t\tthis.fov = fieldOfView\n\t}\n\n\tset fieldOfView(val: number) {\n\t\tthis.fov = val\n\t\tthis.projection = Matrix.Perspective(val, GPU.global.aspect, 0.1, 100)\n\t}\n\n\tget fieldOfView(): number {\n\t\treturn this.fov\n\t}\n\n\tBuffer(): GPUBuffer {\n\t\tconst array = new Float32Array(16 * 2)\n\t\tthis.projection.Save(array, 0)\n\t\tthis.view.Save(array, 16)\n\t\treturn GPU.CreateBuffer(array, GPUBufferUsage.UNIFORM)\n\t}\n\n\tUpdateSize(): void {\n\t\tthis.projection = Matrix.Perspective(this.fov, GPU.global.aspect, 1, 1000)\n\t}\n\n\tTranslate(x: number, y: number, z: number): void {\n\t\tthis.view = Matrix.Translate(-x, -y, -z).Multiply(this.view)\n\t}\n\n\tRotateX(rad: number): void {\n\t\tthis.view = Matrix.RotateX(-rad).Multiply(this.view)\n\t}\n\n\tRotateY(rad: number): void {\n\t\tthis.view = Matrix.RotateY(-rad).Multiply(this.view)\n\t}\n\tRotateGlobalY(rad: number): void {\n\t\tconst axis = this.view.MultiplyVector({ x: 0, y: 1, z: 0 })\n\t\tthis.view = Matrix.Rotate(-rad, axis).Multiply(this.view)\n\t}\n\tRotateZ(rad: number): void {\n\t\tthis.view = Matrix.RotateZ(-rad).Multiply(this.view)\n\t}\n}\n","import * as GPU from '../gpu/gpu'\n\nexport function CreateCube(points: number, noise = 0.001): GPUBuffer {\n\tconst vertices = new Float32Array(points * 4)\n\n\tfor (let i = 0; i < points; i++) {\n\t\tswitch (Math.floor(Math.random() * 6)) {\n\t\tcase 0:\n\t\t\tvertices[i * 4 + 0] = Math.random() * 2 - 1\n\t\t\tvertices[i * 4 + 1] = Math.random() * 2 - 1\n\t\t\tvertices[i * 4 + 2] = -1\n\t\t\tbreak\n\t\tcase 1:\n\t\t\tvertices[i * 4 + 0] = Math.random() * 2 - 1\n\t\t\tvertices[i * 4 + 1] = Math.random() * 2 - 1\n\t\t\tvertices[i * 4 + 2] = 1\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tvertices[i * 4 + 0] = Math.random() * 2 - 1\n\t\t\tvertices[i * 4 + 1] = -1\n\t\t\tvertices[i * 4 + 2] = Math.random() * 2 - 1\n\t\t\tbreak\n\t\tcase 3:\n\t\t\tvertices[i * 4 + 0] = Math.random() * 2 - 1\n\t\t\tvertices[i * 4 + 1] = 1\n\t\t\tvertices[i * 4 + 2] = Math.random() * 2 - 1\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tvertices[i * 4 + 0] = -1\n\t\t\tvertices[i * 4 + 1] = Math.random() * 2 - 1\n\t\t\tvertices[i * 4 + 2] = Math.random() * 2 - 1\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tvertices[i * 4 + 0] = 1\n\t\t\tvertices[i * 4 + 1] = Math.random() * 2 - 1\n\t\t\tvertices[i * 4 + 2] = Math.random() * 2 - 1\n\t\t\tbreak\n\t\t}\n\t\tvertices[i * 4 + 0] += noise * Math.random()\n\t\tvertices[i * 4 + 1] += noise * Math.random()\n\t\tvertices[i * 4 + 2] += noise * Math.random()\n\t}\n\treturn GPU.CreateBuffer(vertices, GPUBufferUsage.VERTEX | GPUBufferUsage.STORAGE)\n}\n","import * as GPU from './gpu'\nimport * as Module from './module'\nimport { GetServerFile } from '../helper/file'\nimport { Position } from './position'\n\nlet quadBuffer = undefined as GPUBuffer | undefined\n\nlet pipeline: GPURenderPipeline | undefined = undefined\n\nexport async function Render(\n\tposition: Position,\n\tradius: number,\n\tlength: number,\n\tpositions: GPUBuffer,\n\tcolors: GPUBuffer,\n): Promise<void> {\n\tif (pipeline == undefined || quadBuffer == undefined) {\n\t\tconst src = await GetServerFile('render/cloud.wgsl')\n\t\tconst module = Module.New(src)\n\t\tpipeline = GPU.device.createRenderPipeline({\n\t\t\tvertex: {\n\t\t\t\tmodule: module,\n\t\t\t\tentryPoint: 'vertexMain',\n\t\t\t\tbuffers: [\n\t\t\t\t\t{\n\t\t\t\t\t\tattributes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tshaderLocation: 0,\n\t\t\t\t\t\t\t\toffset: 0 * 4,\n\t\t\t\t\t\t\t\tformat: 'float32x2',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tarrayStride: 2 * 4,\n\t\t\t\t\t\tstepMode: 'vertex',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tattributes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tshaderLocation: 1,\n\t\t\t\t\t\t\t\toffset: 0 * 4,\n\t\t\t\t\t\t\t\tformat: 'float32x3',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tarrayStride: 4 * 4,\n\t\t\t\t\t\tstepMode: 'instance',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tattributes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tshaderLocation: 2,\n\t\t\t\t\t\t\t\toffset: 0 * 4,\n\t\t\t\t\t\t\t\tformat: 'float32x3',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tarrayStride: 4 * 4,\n\t\t\t\t\t\tstepMode: 'instance',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tfragment: {\n\t\t\t\tmodule: module,\n\t\t\t\tentryPoint: 'fragmentMain',\n\t\t\t\ttargets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tformat: GPU.format,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tdepthStencil: {\n\t\t\t\tformat: 'depth32float',\n\t\t\t\tdepthWriteEnabled: true,\n\t\t\t\tdepthCompare: 'less',\n\t\t\t},\n\t\t\tprimitive: {\n\t\t\t\ttopology: 'triangle-strip',\n\t\t\t\tstripIndexFormat: 'uint32',\n\t\t\t\tcullMode: 'back',\n\t\t\t},\n\t\t})\n\t\tquadBuffer = GPU.CreateBuffer(\n\t\t\tnew Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]),\n\t\t\tGPUBufferUsage.VERTEX,\n\t\t)\n\t}\n\n\tconst array = new Float32Array(16 + 2)\n\tposition.Save(array, 0)\n\tarray[16] = radius\n\tarray[17] = GPU.global.aspect\n\tconst buffer = GPU.CreateBuffer(array, GPUBufferUsage.UNIFORM)\n\tGPU.renderPass.setPipeline(pipeline)\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: pipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: GPU.cameraBuffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t],\n\t})\n\tGPU.renderPass.setBindGroup(0, group)\n\tGPU.renderPass.setVertexBuffer(0, quadBuffer)\n\tGPU.renderPass.setVertexBuffer(1, positions)\n\tGPU.renderPass.setVertexBuffer(2, colors)\n\tGPU.renderPass.draw(4, length)\n}\n","import * as GPU from './gpu'\nimport * as Module from './module'\nimport { GetServerFile } from '../helper/file'\nimport { Position } from './position'\n\nlet computePipeline: undefined | GPUComputePipeline = undefined\nlet renderPipeline: undefined | GPURenderPipeline = undefined\n\nexport async function Compute(k: number, positions: GPUBuffer, length: number): Promise<GPUBuffer> {\n\tif (computePipeline == undefined) {\n\t\tcomputePipeline = GPU.device.createComputePipeline({\n\t\t\tcompute: {\n\t\t\t\tmodule: Module.New(await GetServerFile('compute/kNearest.wgsl')),\n\t\t\t\tentryPoint: 'main',\n\t\t\t},\n\t\t})\n\t}\n\tconst nearest = GPU.CreateEmptyBuffer(\n\t\tlength * 4 * k,\n\t\tGPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,\n\t)\n\tconst param = new Uint32Array([length, k])\n\tconst buffer = GPU.CreateBuffer(param, GPUBufferUsage.STORAGE)\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: computePipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: positions },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 3,\n\t\t\t\tresource: { buffer: nearest },\n\t\t\t},\n\t\t],\n\t})\n\tconst encoder = GPU.device.createCommandEncoder()\n\tconst compute = encoder.beginComputePass({})\n\tcompute.setPipeline(computePipeline)\n\tcompute.setBindGroup(0, group)\n\tcompute.dispatch(Math.ceil(length / 256))\n\tcompute.endPass()\n\tGPU.device.queue.submit([encoder.finish()])\n\treturn nearest\n}\n\nexport async function Render(\n\tposition: Position,\n\tpositions: GPUBuffer,\n\tcolors: GPUBuffer,\n\tnearest: GPUBuffer,\n\tk: number,\n\tlength: number,\n): Promise<void> {\n\tif (renderPipeline == undefined) {\n\t\tconst src = await GetServerFile('render/kNearest.wgsl')\n\t\tconst module = Module.New(src)\n\t\trenderPipeline = GPU.device.createRenderPipeline({\n\t\t\tvertex: {\n\t\t\t\tmodule: module,\n\t\t\t\tentryPoint: 'vertexMain',\n\t\t\t\tbuffers: [],\n\t\t\t},\n\t\t\tfragment: {\n\t\t\t\tmodule: module,\n\t\t\t\tentryPoint: 'fragmentMain',\n\t\t\t\ttargets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tformat: GPU.format,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tdepthStencil: {\n\t\t\t\tformat: 'depth32float',\n\t\t\t\tdepthWriteEnabled: true,\n\t\t\t\tdepthCompare: 'less',\n\t\t\t},\n\t\t\tprimitive: {\n\t\t\t\ttopology: 'line-list',\n\t\t\t},\n\t\t})\n\t}\n\tconst array = new Float32Array(16 + 1)\n\tposition.Save(array, 0)\n\tnew Uint32Array(array.buffer)[16] = k\n\tconst buffer = GPU.CreateBuffer(array, GPUBufferUsage.UNIFORM)\n\tGPU.renderPass.setPipeline(renderPipeline)\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: renderPipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: GPU.cameraBuffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 2,\n\t\t\t\tresource: { buffer: positions },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 3,\n\t\t\t\tresource: { buffer: colors },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 4,\n\t\t\t\tresource: { buffer: nearest },\n\t\t\t},\n\t\t],\n\t})\n\tGPU.renderPass.setBindGroup(0, group)\n\tGPU.renderPass.draw(length * k * 2)\n}\n","import * as GPU from './gpu'\nimport * as Module from './module'\nimport { GetServerFile } from '../helper/file'\nimport { Position } from './position'\n\nlet computePipeline: undefined | GPUComputePipeline = undefined\nlet renderPipeline: undefined | GPURenderPipeline = undefined\n\nexport const K = 16\n\nexport async function Compute(positions: GPUBuffer, length: number): Promise<GPUBuffer> {\n\tif (computePipeline == undefined) {\n\t\tcomputePipeline = GPU.device.createComputePipeline({\n\t\t\tcompute: {\n\t\t\t\tmodule: Module.New(await GetServerFile('compute/triangulate.wgsl')),\n\t\t\t\tentryPoint: 'main',\n\t\t\t},\n\t\t})\n\t}\n\tconst nearest = GPU.CreateEmptyBuffer(\n\t\tlength * 4 * K,\n\t\tGPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,\n\t)\n\tconst encoder = GPU.device.createCommandEncoder()\n\tconst param = new Uint32Array([length])\n\tconst buffer = GPU.CreateBuffer(param, GPUBufferUsage.STORAGE)\n\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: computePipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: positions },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 2,\n\t\t\t\tresource: { buffer: nearest },\n\t\t\t},\n\t\t],\n\t})\n\tconst compute = encoder.beginComputePass()\n\tcompute.setPipeline(computePipeline)\n\tcompute.setBindGroup(0, group)\n\tcompute.dispatch(Math.ceil(length / 256))\n\tcompute.endPass()\n\tGPU.device.queue.submit([encoder.finish()])\n\n\treturn nearest\n}\n\nexport async function Render(\n\tposition: Position,\n\tpositions: GPUBuffer,\n\tcolors: GPUBuffer,\n\tnearest: GPUBuffer,\n\tk: number,\n\tlength: number,\n): Promise<void> {\n\tif (renderPipeline == undefined) {\n\t\tconst src = await GetServerFile('render/triangle.wgsl')\n\t\tconst module = Module.New(src)\n\t\trenderPipeline = GPU.device.createRenderPipeline({\n\t\t\tvertex: {\n\t\t\t\tmodule: module,\n\t\t\t\tentryPoint: 'vertexMain',\n\t\t\t\tbuffers: [],\n\t\t\t},\n\t\t\tfragment: {\n\t\t\t\tmodule: module,\n\t\t\t\tentryPoint: 'fragmentMain',\n\t\t\t\ttargets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tformat: GPU.format,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tdepthStencil: {\n\t\t\t\tformat: 'depth32float',\n\t\t\t\tdepthWriteEnabled: true,\n\t\t\t\tdepthCompare: 'less',\n\t\t\t},\n\t\t\tprimitive: {\n\t\t\t\ttopology: 'triangle-list',\n\t\t\t},\n\t\t})\n\t}\n\tconst array = new Float32Array(16 + 1)\n\tposition.Save(array, 0)\n\tnew Uint32Array(array.buffer)[16] = k\n\tconst buffer = GPU.CreateBuffer(array, GPUBufferUsage.UNIFORM)\n\tGPU.renderPass.setPipeline(renderPipeline)\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: renderPipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: GPU.cameraBuffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 2,\n\t\t\t\tresource: { buffer: positions },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 3,\n\t\t\t\tresource: { buffer: colors },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 4,\n\t\t\t\tresource: { buffer: nearest },\n\t\t\t},\n\t\t],\n\t})\n\tGPU.renderPass.setBindGroup(0, group)\n\tGPU.renderPass.draw(length * k * 3)\n}\n","import * as GPU from './gpu'\nimport * as Module from './module'\nimport { GetServerFile } from '../helper/file'\n\nlet computePipeline: undefined | GPUComputePipeline = undefined\n\nexport async function Compute(nearest: GPUBuffer, k: number, length: number): Promise<void> {\n\tif (computePipeline == undefined) {\n\t\tcomputePipeline = GPU.device.createComputePipeline({\n\t\t\tcompute: {\n\t\t\t\tmodule: Module.New(await GetServerFile('compute/filter.wgsl')),\n\t\t\t\tentryPoint: 'main',\n\t\t\t},\n\t\t})\n\t}\n\tconst param = new Uint32Array([length, k])\n\tconst buffer = GPU.CreateBuffer(param, GPUBufferUsage.STORAGE)\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: computePipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: nearest },\n\t\t\t},\n\t\t],\n\t})\n\tconst encoder = GPU.device.createCommandEncoder()\n\tconst compute = encoder.beginComputePass({})\n\tcompute.setPipeline(computePipeline)\n\tcompute.setBindGroup(0, group)\n\tcompute.dispatch(Math.ceil(length / 256))\n\tcompute.endPass()\n\tGPU.device.queue.submit([encoder.finish()])\n}\n","import * as GPU from './gpu'\nimport * as Module from './module'\nimport { GetServerFile } from '../helper/file'\n\nlet computePipeline: undefined | GPUComputePipeline = undefined\n\nexport async function Compute(\n\tcloud: GPUBuffer,\n\tnearest: GPUBuffer,\n\tcolors: GPUBuffer,\n\tk: number,\n\tlength: number,\n): Promise<void> {\n\tif (computePipeline == undefined) {\n\t\tcomputePipeline = GPU.device.createComputePipeline({\n\t\t\tcompute: {\n\t\t\t\tmodule: Module.New(await GetServerFile('compute/edge.wgsl')),\n\t\t\t\tentryPoint: 'main',\n\t\t\t},\n\t\t})\n\t}\n\tconst param = new Uint32Array([length, k])\n\tconst buffer = GPU.CreateBuffer(param, GPUBufferUsage.STORAGE)\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: computePipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: cloud },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 2,\n\t\t\t\tresource: { buffer: nearest },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 3,\n\t\t\t\tresource: { buffer: colors },\n\t\t\t},\n\t\t],\n\t})\n\tconst encoder = GPU.device.createCommandEncoder()\n\tconst compute = encoder.beginComputePass({})\n\tcompute.setPipeline(computePipeline)\n\tcompute.setBindGroup(0, group)\n\tcompute.dispatch(Math.ceil(length / 256))\n\tcompute.endPass()\n\tGPU.device.queue.submit([encoder.finish()])\n}\n","import * as GPU from './gpu'\nimport * as Module from './module'\nimport { GetServerFile } from '../helper/file'\n\nlet computePipeline: undefined | GPUComputePipeline = undefined\n\nexport async function Compute(\n\tcloud: GPUBuffer,\n\tnearest: GPUBuffer,\n\tcolors: GPUBuffer,\n\tk: number,\n\tlength: number,\n): Promise<void> {\n\tif (computePipeline == undefined) {\n\t\tcomputePipeline = GPU.device.createComputePipeline({\n\t\t\tcompute: {\n\t\t\t\tmodule: Module.New(await GetServerFile('compute/edgeOld.wgsl')),\n\t\t\t\tentryPoint: 'main',\n\t\t\t},\n\t\t})\n\t}\n\tconst param = new Uint32Array([length, k])\n\tconst buffer = GPU.CreateBuffer(param, GPUBufferUsage.STORAGE)\n\tconst group = GPU.device.createBindGroup({\n\t\tlayout: computePipeline.getBindGroupLayout(0),\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tresource: { buffer: buffer },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tresource: { buffer: cloud },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 2,\n\t\t\t\tresource: { buffer: nearest },\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 3,\n\t\t\t\tresource: { buffer: colors },\n\t\t\t},\n\t\t],\n\t})\n\tconst encoder = GPU.device.createCommandEncoder()\n\tconst compute = encoder.beginComputePass({})\n\tcompute.setPipeline(computePipeline)\n\tcompute.setBindGroup(0, group)\n\tcompute.dispatch(Math.ceil(length / 256))\n\tcompute.endPass()\n\tGPU.device.queue.submit([encoder.finish()])\n}\n","import * as GPU from '../gpu/gpu'\n\nexport function CreateColors(points: number): GPUBuffer {\n\tconst colors = new Float32Array(points * 4)\n\n\tfor (let i = 0; i < points; i++) {\n\t\tcolors[i * 4 + 0] = 0.3 + 0.7 * Math.random()\n\t\tcolors[i * 4 + 1] = 0.3 + 0.7 * Math.random()\n\t\tcolors[i * 4 + 2] = 0.3 + 0.7 * Math.random()\n\t}\n\n\treturn GPU.CreateBuffer(colors, GPUBufferUsage.VERTEX | GPUBufferUsage.STORAGE)\n}\n","import * as GPU from '../gpu/gpu'\n\nexport function CreateGrid(amount: number): {\n\tlength: number\n\tpositions: GPUBuffer\n\tcolors: GPUBuffer\n} {\n\tconst positions = new Float32Array((amount * 4 + 3) * 8)\n\tconst colors = new Float32Array((amount * 4 + 3) * 8)\n\ttype vec = { x: number; y: number; z: number }\n\tconst addLine = (\n\t\tidx: number,\n\t\tstart: vec,\n\t\tend: vec,\n\t\tcolor: vec,\n\t\tendColor: vec | undefined = undefined,\n\t) => {\n\t\tif (endColor == undefined) {\n\t\t\tendColor = color\n\t\t}\n\t\tidx *= 8\n\t\tpositions[idx + 0] = start.x\n\t\tpositions[idx + 1] = start.y\n\t\tpositions[idx + 2] = start.z\n\t\tcolors[idx + 0] = color.x\n\t\tcolors[idx + 1] = color.y\n\t\tcolors[idx + 2] = color.z\n\n\t\tpositions[idx + 4] = end.x\n\t\tpositions[idx + 5] = end.y\n\t\tpositions[idx + 6] = end.z\n\t\tcolors[idx + 4] = endColor.x\n\t\tcolors[idx + 5] = endColor.y\n\t\tcolors[idx + 6] = endColor.z\n\t}\n\tfor (let i = -amount; i <= amount; i++) {\n\t\tif (i == 0) {\n\t\t\tcontinue\n\t\t}\n\t\tlet idx: number\n\t\tif (i < 0) {\n\t\t\tidx = i\n\t\t} else if (i == 0) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\tidx = i - 1\n\t\t}\n\t\taddLine(\n\t\t\tamount * 1 + idx,\n\t\t\t{ x: i, y: 0, z: amount },\n\t\t\t{ x: i, y: 0, z: -amount },\n\t\t\t{ x: 1, y: 1, z: 1 },\n\t\t)\n\t\taddLine(\n\t\t\tamount * 3 + idx,\n\t\t\t{ x: amount, y: 0, z: i },\n\t\t\t{ x: -amount, y: 0, z: i },\n\t\t\t{ x: 1, y: 1, z: 1 },\n\t\t)\n\t}\n\t//3 main axes\n\taddLine(\n\t\tamount * 4 + 0,\n\t\t{ x: -amount, y: 0, z: 0 },\n\t\t{ x: amount, y: 0, z: 0 },\n\t\t{ x: 1, y: 1, z: 1 },\n\t\t{ x: 1, y: 0, z: 0 },\n\t)\n\taddLine(\n\t\tamount * 4 + 1,\n\t\t{ x: 0, y: -amount, z: 0 },\n\t\t{ x: 0, y: amount, z: 0 },\n\t\t{ x: 1, y: 1, z: 1 },\n\t\t{ x: 0, y: 1, z: 0 },\n\t)\n\taddLine(\n\t\tamount * 4 + 2,\n\t\t{ x: 0, y: 0, z: -amount },\n\t\t{ x: 0, y: 0, z: amount },\n\t\t{ x: 1, y: 1, z: 1 },\n\t\t{ x: 0, y: 0, z: 1 },\n\t)\n\treturn {\n\t\tlength: (amount * 4 + 3) * 2,\n\t\tpositions: GPU.CreateBuffer(positions, GPUBufferUsage.VERTEX | GPUBufferUsage.STORAGE),\n\t\tcolors: GPU.CreateBuffer(colors, GPUBufferUsage.VERTEX | GPUBufferUsage.STORAGE),\n\t}\n}\n","import * as GPU from '../gpu/gpu'\n\nexport function CreateSphere(points: number): GPUBuffer {\n\tconst vertices = new Float32Array(points * 4)\n\n\tfor (let i = 0; i < points; i++) {\n\t\tconst long = Math.acos(Math.random() * 2 - 1) //less points near the poles\n\t\tconst lat = Math.random() * 2 * Math.PI\n\n\t\tvertices[i * 4 + 0] = Math.sin(lat) * Math.sin(long)\n\t\tvertices[i * 4 + 1] = Math.cos(long)\n\t\tvertices[i * 4 + 2] = Math.cos(lat) * Math.sin(long)\n\t}\n\n\treturn GPU.CreateBuffer(vertices, GPUBufferUsage.VERTEX | GPUBufferUsage.STORAGE)\n}\n","//https://gitlab.com/taketwo/three-pcd-loader/-/blob/master/decompress-lzf.js //edited\nexport function LZF(inData: Uint8Array, outLength: number): Uint8Array {\n\tconst inLength = inData.length\n\tconst outData = new Uint8Array(outLength)\n\tlet inPtr = 0\n\tlet outPtr = 0\n\tdo {\n\t\tlet ctrl = inData[inPtr++]\n\t\tif (ctrl < 1 << 5) {\n\t\t\tctrl++\n\t\t\tif (outPtr + ctrl > outLength) throw new Error('Output buffer is not large enough')\n\t\t\tif (inPtr + ctrl > inLength) throw new Error('Invalid compressed data')\n\t\t\tdo {\n\t\t\t\toutData[outPtr++] = inData[inPtr++]\n\t\t\t} while (--ctrl)\n\t\t} else {\n\t\t\tlet len = ctrl >> 5\n\t\t\tlet ref = outPtr - ((ctrl & 0x1f) << 8) - 1\n\t\t\tif (inPtr >= inLength) throw new Error('Invalid compressed data')\n\t\t\tif (len === 7) {\n\t\t\t\tlen += inData[inPtr++]\n\t\t\t\tif (inPtr >= inLength) throw new Error('Invalid compressed data')\n\t\t\t}\n\t\t\tref -= inData[inPtr++]\n\t\t\tif (outPtr + len + 2 > outLength) throw new Error('Output buffer is not large enough')\n\t\t\tif (ref < 0) throw new Error('Invalid compressed data')\n\t\t\tif (ref >= outPtr) throw new Error('Invalid compressed data')\n\t\t\tdo {\n\t\t\t\toutData[outPtr++] = outData[ref++]\n\t\t\t} while (--len + 2)\n\t\t}\n\t} while (inPtr < inLength)\n\treturn outData\n}\n","//https://gitlab.com/taketwo/three-pcd-loader/-/blob/master/pcd-loader.js //edited\nimport * as Decompress from './decompress'\nimport * as GPU from '../gpu/gpu'\n\n/**\n * @author Filipe Caixeta / http://filipecaixeta.com.br\n * @author Sergey Alexandrov\n *\n * Description: A THREE loader for PCD files.\n *\n * Based on the example THREE.PCDLoader written by Filipe Caixeta.\n *\n * Changes:\n *\n *   - added support for compressed binary files\n *   - significantly improved header parsing time\n *   - added support for RGBA color field\n *   - removed support for normals field\n *\n */\n\nconst littleEndian = true\n\nexport function CreatePCD(data: ArrayBufferLike): [GPUBuffer, number] | undefined {\n\tconst header = parseHeader(data)\n\tif (header == null) {\n\t\treturn undefined\n\t}\n\tconst offset = header.offset\n\tlet position: Float32Array | undefined = undefined\n\tif (offset.x !== undefined && offset.y !== undefined && offset.z !== undefined) {\n\t\tposition = new Float32Array(header.points * 4)\n\t}\n\n\tlet color: Float32Array | undefined = undefined\n\tlet color_offset: number = undefined as any\n\tif (offset.rgb !== undefined || offset.rgba !== undefined) {\n\t\tcolor = new Float32Array(header.points * 4)\n\t\tcolor_offset = offset.rgb === undefined ? offset.rgba : offset.rgb\n\t}\n\n\tif (header.data === 'ascii') {\n\t\tconst charArrayView = new Uint8Array(data)\n\t\tlet dataString = ''\n\t\tfor (let j = header.headerLen; j < data.byteLength; j++) {\n\t\t\tdataString += String.fromCharCode(charArrayView[j])\n\t\t}\n\n\t\tconst lines = dataString.split('\\n')\n\t\tlet i3 = 0\n\t\tfor (let i = 0; i < lines.length; i++, i3 += 4) {\n\t\t\tconst line = lines[i].split(' ')\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition[i3 + 0] = parseFloat(line[offset.x])\n\t\t\t\tposition[i3 + 1] = parseFloat(line[offset.y])\n\t\t\t\tposition[i3 + 2] = parseFloat(line[offset.z])\n\t\t\t}\n\t\t\tif (color !== undefined) {\n\t\t\t\tlet c: Uint32Array | Float32Array = undefined as any\n\t\t\t\tif (offset.rgba !== undefined) {\n\t\t\t\t\tc = new Uint32Array([parseInt(line[offset.rgba])])\n\t\t\t\t} else if (offset.rgb !== undefined) {\n\t\t\t\t\tc = new Float32Array([parseFloat(line[offset.rgb])])\n\t\t\t\t}\n\t\t\t\tconst dataview = new Uint8Array(c.buffer, 0)\n\t\t\t\tcolor[i3 + 2] = dataview[0] / 255.0\n\t\t\t\tcolor[i3 + 1] = dataview[1] / 255.0\n\t\t\t\tcolor[i3 + 0] = dataview[2] / 255.0\n\t\t\t}\n\t\t}\n\t} else if (header.data === 'binary') {\n\t\tlet row = 0\n\t\tconst dataArrayView = new DataView(data, header.headerLen)\n\t\tfor (let p = 0; p < header.points; row += header.rowSize, p++) {\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition[p * 4 + 0] = dataArrayView.getFloat32(row + offset.x, littleEndian)\n\t\t\t\tposition[p * 4 + 1] = dataArrayView.getFloat32(row + offset.y, littleEndian)\n\t\t\t\tposition[p * 4 + 2] = dataArrayView.getFloat32(row + offset.z, littleEndian)\n\t\t\t}\n\t\t\tif (color !== undefined) {\n\t\t\t\tcolor[p * 4 + 2] = dataArrayView.getUint8(row + color_offset + 0) / 255.0\n\t\t\t\tcolor[p * 4 + 1] = dataArrayView.getUint8(row + color_offset + 1) / 255.0\n\t\t\t\tcolor[p * 4 + 0] = dataArrayView.getUint8(row + color_offset + 2) / 255.0\n\t\t\t}\n\t\t}\n\t} else if (header.data === 'binary_compressed') {\n\t\tconst sizes = new Uint32Array(data.slice(header.headerLen, header.headerLen + 8))\n\t\tconst compressedSize = sizes[0]\n\t\tconst decompressedSize = sizes[1]\n\t\tconst decompressed = Decompress.LZF(\n\t\t\tnew Uint8Array(data, header.headerLen + 8, compressedSize),\n\t\t\tdecompressedSize,\n\t\t)\n\t\tconst dataArrayView = new DataView(decompressed.buffer)\n\t\tfor (let p = 0; p < header.points; p++) {\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition[p * 4 + 0] = dataArrayView.getFloat32(offset.x + p * 4, littleEndian)\n\t\t\t\tposition[p * 4 + 1] = dataArrayView.getFloat32(offset.y + p * 4, littleEndian)\n\t\t\t\tposition[p * 4 + 2] = dataArrayView.getFloat32(offset.z + p * 4, littleEndian)\n\t\t\t}\n\t\t\tif (color !== undefined) {\n\t\t\t\tcolor[p * 4 + 2] = dataArrayView.getUint8(color_offset + p * 4 + 0) / 255.0\n\t\t\t\tcolor[p * 4 + 1] = dataArrayView.getUint8(color_offset + p * 4 + 1) / 255.0\n\t\t\t\tcolor[p * 4 + 0] = dataArrayView.getUint8(color_offset + p * 4 + 2) / 255.0\n\t\t\t}\n\t\t}\n\t}\n\tif (position == undefined) {\n\t\treturn undefined\n\t}\n\treturn [\n\t\tGPU.CreateBuffer(position, GPUBufferUsage.VERTEX | GPUBufferUsage.STORAGE),\n\t\theader.points,\n\t]\n}\n\ntype Header = {\n\tdata: string\n\theaderLen: number\n\tstr: string\n\tversion: number\n\tfields: string[]\n\tsize: number[]\n\ttype: string[]\n\tcount: number[]\n\twidth: number\n\theight: number\n\tviewpoint: string\n\tpoints: number\n\toffset: { [key: string]: number }\n\trowSize: number\n}\n\nfunction parseHeader(binaryData: ArrayBufferLike): Header | null {\n\tlet headerText = ''\n\tconst charArray = new Uint8Array(binaryData)\n\tlet i = 0\n\tconst max = charArray.length\n\twhile (i < max && headerText.search(/[\\r\\n]DATA\\s(\\S*)\\s/i) === -1) {\n\t\theaderText += String.fromCharCode(charArray[i++])\n\t}\n\tconst result1 = headerText.search(/[\\r\\n]DATA\\s(\\S*)\\s/i)\n\tconst result2 = /[\\r\\n]DATA\\s(\\S*)\\s/i.exec(headerText.substr(result1 - 1))\n\tif (result1 == undefined || result2 == undefined) {\n\t\treturn null\n\t}\n\n\tconst header = {} as Header\n\theader.data = result2[1]\n\theader.headerLen = result2[0].length + result1\n\theader.str = headerText.substr(0, header.headerLen)\n\n\t// Remove comments\n\theader.str = header.str.replace(/#.*/gi, '')\n\tconst version = /VERSION (.*)/i.exec(header.str)\n\tif (version !== null) {\n\t\theader.version = parseFloat(version[1])\n\t}\n\tconst fields = /FIELDS (.*)/i.exec(header.str)\n\tif (fields !== null) {\n\t\theader.fields = fields[1].split(' ')\n\t}\n\tconst size = /SIZE (.*)/i.exec(header.str)\n\tif (size !== null) {\n\t\theader.size = size[1].split(' ').map(function (x) {\n\t\t\treturn parseInt(x, 10)\n\t\t})\n\t}\n\tconst type = /TYPE (.*)/i.exec(header.str)\n\tif (type !== null) {\n\t\theader.type = type[1].split(' ')\n\t}\n\tconst count = /COUNT (.*)/i.exec(header.str)\n\tif (count !== null) {\n\t\theader.count = count[1].split(' ').map(function (x) {\n\t\t\treturn parseInt(x, 10)\n\t\t})\n\t}\n\tconst width = /WIDTH (.*)/i.exec(header.str)\n\tif (width !== null) {\n\t\theader.width = parseInt(width[1])\n\t}\n\tconst height = /HEIGHT (.*)/i.exec(header.str)\n\tif (height !== null) {\n\t\theader.height = parseInt(height[1])\n\t}\n\tconst viewpoint = /VIEWPOINT (.*)/i.exec(header.str)\n\tif (viewpoint !== null) {\n\t\theader.viewpoint = viewpoint[1]\n\t}\n\tconst points = /POINTS (.*)/i.exec(header.str)\n\tif (points !== null) {\n\t\theader.points = parseInt(points[1], 10)\n\t}\n\tif (header.points === null) {\n\t\theader.points = header.width * header.height\n\t}\n\tif (header.count == undefined) {\n\t\theader.count = []\n\t\tfor (i = 0; i < header.fields.length; i++) {\n\t\t\theader.count.push(1)\n\t\t}\n\t}\n\theader.offset = {}\n\tlet sizeSum = 0\n\tfor (let j = 0; j < header.fields.length; j++) {\n\t\tif (header.data === 'ascii') {\n\t\t\theader.offset[header.fields[j]] = j\n\t\t} else if (header.data === 'binary') {\n\t\t\theader.offset[header.fields[j]] = sizeSum\n\t\t\tsizeSum += header.size[j]\n\t\t} else if (header.data === 'binary_compressed') {\n\t\t\theader.offset[header.fields[j]] = sizeSum\n\t\t\tsizeSum += header.size[j] * header.points\n\t\t}\n\t}\n\t// For binary only\n\theader.rowSize = sizeSum\n\treturn header\n}\n","import * as GPU from './gpu/gpu'\nimport * as Lines from './gpu/lines'\nimport { Position } from './gpu/position'\nimport { Camera } from './gpu/camera'\nimport { CreateCube } from './loader/cube'\nimport * as Cloud from './gpu/cloud'\nimport * as KNearest from './gpu/kNearest'\nimport * as Triangulate from './gpu/triangulate'\nimport * as Filter from './gpu/filter'\nimport * as Edge from './gpu/edge'\nimport * as EdgeOld from './gpu/edgeOld'\nimport { CreateColors } from './loader/color'\nimport { CreateGrid } from './loader/grid'\nimport { CreateSphere } from './loader/sphere'\nimport { CreatePCD } from './loader/pcd'\n\ndocument.body.onload = async () => {\n\tconst display = document.getElementById('display') as HTMLDivElement\n\tconst canvas = await GPU.Setup(display.clientWidth, display.clientHeight)\n\tif (canvas == undefined) {\n\t\tdisplay.remove()\n\t\tconst error = document.createElement('div')\n\t\terror.className = 'error'\n\t\tconst topLine = document.createElement('div')\n\t\ttopLine.className = 'large'\n\t\ttopLine.innerHTML = 'WebGPU not available'\n\t\terror.append(topLine)\n\t\tconst botLine = document.createElement('div')\n\t\tbotLine.className = 'normal'\n\t\tbotLine.innerHTML =\n\t\t\t'Only tested with <a href=\"https://www.google.com/chrome\">Google Chrome</a>'\n\t\terror.append(botLine)\n\t\tdocument.body.append(error)\n\t\treturn\n\t}\n\tdisplay.append(canvas)\n\n\tconst cam = new Camera(Math.PI / 4)\n\tcam.Translate(0, 5, 30)\n\n\tconst increase = new Position()\n\tincrease.Scale(5, 5, 5)\n\tconst normal = new Position()\n\n\tlet k = 64\n\tlet kOld = k\n\tlet length = 50_000\n\tlet lengthOld = length\n\tlet form: 'cube' | 'sphere' | 'bunny' | 'test' = 'sphere'\n\tlet cloud = CreateSphere(length)\n\tlet colors = CreateColors(length)\n\n\tconst grid = CreateGrid(10)\n\n\tdisplay.onwheel = (ev) => {\n\t\tconst scale = 1 + ev.deltaY / 1000\n\t\tif (ev.ctrlKey == false) {\n\t\t\tincrease.Scale(scale, scale, scale)\n\t\t} else {\n\t\t\tlet fov = cam.fieldOfView * scale\n\t\t\tif (fov < Math.PI / 10) {\n\t\t\t\tfov = Math.PI / 10\n\t\t\t}\n\t\t\tif (fov > (Math.PI * 9) / 10) {\n\t\t\t\tfov = (Math.PI * 9) / 10\n\t\t\t}\n\t\t\tcam.fieldOfView = fov\n\t\t}\n\t\tev.preventDefault()\n\t\tev.stopImmediatePropagation()\n\t}\n\n\tdocument.body.onresize = () => {\n\t\tGPU.Resize(display.clientWidth, display.clientHeight)\n\t\tcam.UpdateSize()\n\t}\n\n\tconst keys: { [key: string]: true | undefined } = {}\n\tlet nearest: undefined | GPUBuffer = undefined\n\tdocument.body.onkeydown = async (ev) => {\n\t\tkeys[ev.code] = true\n\t\tswitch (ev.code) {\n\t\tcase 'KeyH':\n\t\t\tmakeHint(\n\t\t\t\t'Left mouse button: rotate camera',\n\t\t\t\t'Mouse wheel: change cloud size',\n\t\t\t\t'Mouse wheel + Control: change field of view',\n\t\t\t\t'QWER: move camera',\n\t\t\t\t'1: change cloud form',\n\t\t\t\t'1 + Control: change cloud size for sphere and cube',\n\t\t\t\t'2: compute k nearest points',\n\t\t\t\t'2 + Control: change k',\n\t\t\t\t'3: compute triangulation',\n\t\t\t\t'4: approximate normal (best with triangulation)',\n\t\t\t\t'4 + Control: approximate normal (best with k-nearest)',\n\t\t\t\t'Space: render connections with polygons',\n\t\t\t\t'0: open notes (german)',\n\t\t\t)\n\t\t\tbreak\n\t\tcase 'Digit1':\n\t\t\tif (ev.ctrlKey) {\n\t\t\t\tconst number = getUserNumber('input new cloud size')\n\t\t\t\tif (number != undefined) {\n\t\t\t\t\tlengthOld = number\n\t\t\t\t\tform = 'test'\n\t\t\t\t} else {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tcloud.destroy()\n\t\t\tcolors.destroy()\n\t\t\tswitch (form) {\n\t\t\tcase 'sphere':\n\t\t\t\tlength = lengthOld\n\t\t\t\tcloud = CreateCube(length)\n\t\t\t\tform = 'cube'\n\t\t\t\tbreak\n\t\t\tcase 'cube': {\n\t\t\t\tconst response = await fetch('../src/loader/pcd/bunny.pcd')\n\t\t\t\tconst content = await (await response.blob()).arrayBuffer()\n\t\t\t\tconst result = CreatePCD(content)\n\t\t\t\tif (result != undefined) {\n\t\t\t\t\t[cloud, length] = result\n\t\t\t\t} else {\n\t\t\t\t\talert('pcd error')\n\t\t\t\t}\n\t\t\t\tform = 'bunny'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'bunny': {\n\t\t\t\tconst response = await fetch('../src/loader/pcd/rops_cloud.pcd')\n\t\t\t\tconst content = await (await response.blob()).arrayBuffer()\n\t\t\t\tconst result = CreatePCD(content)\n\t\t\t\tif (result != undefined) {\n\t\t\t\t\t[cloud, length] = result\n\t\t\t\t} else {\n\t\t\t\t\talert('pcd error')\n\t\t\t\t}\n\t\t\t\tform = 'test'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'test':\n\t\t\t\tlength = lengthOld\n\t\t\t\tcloud = CreateSphere(length)\n\t\t\t\tform = 'sphere'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcolors = CreateColors(length)\n\t\t\tif (nearest != undefined) {\n\t\t\t\tnearest.destroy()\n\t\t\t\tnearest = undefined\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'Digit2':\n\t\t\tif (ev.ctrlKey) {\n\t\t\t\tconst number = getUserNumber('input new k for nearest points')\n\t\t\t\tif (number != undefined) {\n\t\t\t\t\tkOld = number\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nearest != undefined) {\n\t\t\t\tnearest.destroy()\n\t\t\t}\n\t\t\tk = kOld\n\t\t\tnearest = await KNearest.Compute(k, cloud, length)\n\t\t\tbreak\n\t\tcase 'Digit3':\n\t\t\tif (nearest != undefined) {\n\t\t\t\tnearest.destroy()\n\t\t\t}\n\t\t\tnearest = await Triangulate.Compute(cloud, length)\n\t\t\tk = Triangulate.K\n\t\t\tbreak\n\t\tcase 'Digit4':\n\t\t\tif (nearest == undefined) {\n\t\t\t\talert('please calculate the connections first')\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (ev.ctrlKey == false) {\n\t\t\t\tawait Edge.Compute(cloud, nearest, colors, k, length)\n\t\t\t} else {\n\t\t\t\tawait EdgeOld.Compute(cloud, nearest, colors, k, length)\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'Digit5':\n\t\t\tif (nearest == undefined) {\n\t\t\t\talert('please calculate the connections first')\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tawait Filter.Compute(nearest, k, length)\n\t\t\tbreak\n\t\tcase 'Digit0':\n\t\t\twindow.open('notes.html', '_blank')\n\t\t}\n\t}\n\n\tdocument.body.onkeyup = (ev) => {\n\t\tdelete keys[ev.code]\n\t}\n\tmakeHint('press \\'H\\' for help')\n\n\tdisplay.onmousemove = (ev) => {\n\t\tif ((ev.buttons & 1) != 0) {\n\t\t\tcam.RotateX(-ev.movementY / 200)\n\t\t\tcam.RotateGlobalY(-ev.movementX / 200)\n\t\t}\n\t}\n\n\tlet last: number\n\trequestAnimationFrame((time: number) => {\n\t\tlast = time\n\t})\n\n\tasync function Draw(time: number) {\n\t\tconst delta = time - last\n\t\tif (delta > 25) {\n\t\t\tconsole.log(delta)\n\t\t}\n\t\tconst dist = delta / 50\n\t\tconst move = (key: string, x: number, y: number, z: number) => {\n\t\t\tif (keys[key] != undefined) {\n\t\t\t\tcam.Translate(x * dist, y * dist, z * dist)\n\t\t\t}\n\t\t}\n\n\t\tmove('KeyW', 0, 0, -1)\n\t\tmove('KeyD', 1, 0, 0)\n\t\tmove('KeyS', 0, 0, 1)\n\t\tmove('KeyA', -1, 0, 0)\n\t\tmove('KeyF', 0, -1, 0)\n\t\tmove('KeyR', 0, 1, 0)\n\n\t\tGPU.StartRender(cam)\n\t\tawait Lines.Render(normal, grid.length, grid.positions, grid.colors)\n\t\tif (nearest != undefined) {\n\t\t\tif (keys['Space'] == undefined) {\n\t\t\t\tawait Cloud.Render(increase, 0.015, length, cloud, colors)\n\t\t\t\tawait KNearest.Render(increase, cloud, colors, nearest, k, length)\n\t\t\t} else {\n\t\t\t\tawait Triangulate.Render(increase, cloud, colors, nearest, k, length)\n\t\t\t}\n\t\t} else {\n\t\t\tawait Cloud.Render(increase, 0.015, length, cloud, colors)\n\t\t}\n\t\tGPU.FinishRender()\n\t\tlast = time\n\t\trequestAnimationFrame(Draw)\n\t}\n\trequestAnimationFrame(Draw)\n}\n\nfunction makeHint(...text: string[]): void {\n\tconst hint = document.createElement('div')\n\tlet combined = ''\n\tfor (let i = 0; i < text.length; i++) {\n\t\tcombined += text[i] + '\\n'\n\t}\n\thint.textContent = combined\n\thint.className = 'hint'\n\tdocument.body.append(hint)\n\tsetTimeout(() => {\n\t\thint.remove()\n\t}, 5000)\n}\n\nfunction getUserNumber(text: string): number | undefined {\n\tconst str = prompt(text)\n\tif (str == null) {\n\t\treturn undefined\n\t}\n\tconst x = parseInt(str)\n\tif (isNaN(x)) {\n\t\treturn undefined\n\t}\n\treturn x\n}\n"]}